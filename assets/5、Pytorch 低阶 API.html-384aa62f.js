const e=JSON.parse('{"key":"v-4590c6fd","path":"/code/python/Machine%20Learning/Pytorch/5%E3%80%81Pytorch%20%E4%BD%8E%E9%98%B6%20API.html","title":"5、Pytorch 低阶 API","lang":"zh-CN","frontmatter":{"description":"Pytorch 中 5 个不同的层次结构： 硬件层：Pytorch 支持 CPU、GPU 加入计算资源池 内核层：C++ 实现的内核 低阶 API：Python 实现的操作符，提供了封装 C++ 内核的低级 API 指令，主要包括各种张量操作算子、自动微分、变量管理 中阶 API：Python 实现的模型组件，对低级API进行了函数封装，主要包括各种模型层，损失函数，优化器，数据管道等等 高阶 API：Python 实现的模型接口。Pytorch 没有官方的高阶API。为了便于训练模型，作者仿照 keras 中的模型接口，封装了 pytorch 的高阶模型接口 torchkeras.KerasModel。此外，有一个非常流行的非官方 Pytorch 的高阶 API 库，叫做 pytorch_lightning，作者通过引用和借鉴它的一些能力，设计了一个和 torchkeras.KerasModel 功能类似的高阶模型接口 torchkeras.LightModel，功能更加强大。","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/python/Machine%20Learning/Pytorch/5%E3%80%81Pytorch%20%E4%BD%8E%E9%98%B6%20API.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"5、Pytorch 低阶 API"}],["meta",{"property":"og:description","content":"Pytorch 中 5 个不同的层次结构： 硬件层：Pytorch 支持 CPU、GPU 加入计算资源池 内核层：C++ 实现的内核 低阶 API：Python 实现的操作符，提供了封装 C++ 内核的低级 API 指令，主要包括各种张量操作算子、自动微分、变量管理 中阶 API：Python 实现的模型组件，对低级API进行了函数封装，主要包括各种模型层，损失函数，优化器，数据管道等等 高阶 API：Python 实现的模型接口。Pytorch 没有官方的高阶API。为了便于训练模型，作者仿照 keras 中的模型接口，封装了 pytorch 的高阶模型接口 torchkeras.KerasModel。此外，有一个非常流行的非官方 Pytorch 的高阶 API 库，叫做 pytorch_lightning，作者通过引用和借鉴它的一些能力，设计了一个和 torchkeras.KerasModel 功能类似的高阶模型接口 torchkeras.LightModel，功能更加强大。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5、Pytorch 低阶 API\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"5.1、张量结构操作","slug":"_5-1、张量结构操作","link":"#_5-1、张量结构操作","children":[{"level":3,"title":"创建张量","slug":"创建张量","link":"#创建张量","children":[]},{"level":3,"title":"索引切片","slug":"索引切片","link":"#索引切片","children":[]},{"level":3,"title":"维度变换","slug":"维度变换","link":"#维度变换","children":[]},{"level":3,"title":"合并分割","slug":"合并分割","link":"#合并分割","children":[]}]},{"level":2,"title":"5.2、数学运算","slug":"_5-2、数学运算","link":"#_5-2、数学运算","children":[{"level":3,"title":"标量运算","slug":"标量运算","link":"#标量运算","children":[]},{"level":3,"title":"向量运算","slug":"向量运算","link":"#向量运算","children":[]},{"level":3,"title":"矩阵运算","slug":"矩阵运算","link":"#矩阵运算","children":[]},{"level":3,"title":"广播机制","slug":"广播机制","link":"#广播机制","children":[]}]},{"level":2,"title":"5.3、nn.functional 和 nn.Module","slug":"_5-3、nn-functional-和-nn-module","link":"#_5-3、nn-functional-和-nn-module","children":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"使用 nn.Module 来管理参数(配合 nn.Parameter 使用)","slug":"使用-nn-module-来管理参数-配合-nn-parameter-使用","link":"#使用-nn-module-来管理参数-配合-nn-parameter-使用","children":[]},{"level":3,"title":"使用 nn.Module 来管理子模块","slug":"使用-nn-module-来管理子模块","link":"#使用-nn-module-来管理子模块","children":[]}]}],"readingTime":{"minutes":25.51,"words":7653},"filePathRelative":"code/python/Machine Learning/Pytorch/5、Pytorch 低阶 API.md","excerpt":"<p>Pytorch 中 5 个不同的层次结构：</p>\\n<ul>\\n<li>硬件层：Pytorch 支持 CPU、GPU 加入计算资源池</li>\\n<li>内核层：C++ 实现的内核</li>\\n<li>低阶 API：Python 实现的操作符，提供了封装 C++ 内核的低级 API 指令，主要包括各种张量操作算子、自动微分、变量管理</li>\\n<li>中阶 API：Python 实现的模型组件，对低级API进行了函数封装，主要包括各种模型层，损失函数，优化器，数据管道等等</li>\\n<li>高阶 API：Python 实现的模型接口。Pytorch 没有官方的高阶API。为了便于训练模型，作者仿照 keras 中的模型接口，封装了 pytorch 的高阶模型接口 torchkeras.KerasModel。此外，有一个非常流行的非官方 Pytorch 的高阶 API 库，叫做 pytorch_lightning，作者通过引用和借鉴它的一些能力，设计了一个和 torchkeras.KerasModel 功能类似的高阶模型接口 torchkeras.LightModel，功能更加强大。</li>\\n</ul>","autoDesc":true}');export{e as data};
