import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as h,o as s,c as t,e as a,f as i,b as r,d}from"./app-af6c014c.js";const c={},l=i(`<h2 id="_2、位移" tabindex="-1"><a class="header-anchor" href="#_2、位移" aria-hidden="true">#</a> ２、位移</h2><p>1、偏移</p><p><code>图形层、alpha遮罩遮、偏移</code></p><p>2、变形</p><h2 id="_3、表达式" tabindex="-1"><a class="header-anchor" href="#_3、表达式" aria-hidden="true">#</a> ３、表达式</h2><h3 id="_1、晃动表达式" tabindex="-1"><a class="header-anchor" href="#_1、晃动表达式" aria-hidden="true">#</a> 1、晃动表达式</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>freq = 3;
decay = 5;
n = 0;
if (numKeys &gt; 0){
n = nearestKey(time).index;
if (key(n).time &gt; time) n--;
}
if (n &gt; 0){
t = time - key(n).time;
amp = velocityAtTime(key(n).time - .001);
w = freq*Math.PI*2;
value + amp*(Math.sin(t*w)/Math.exp(decay*t)/w);
}else
Value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、glitch" tabindex="-1"><a class="header-anchor" href="#_4、glitch" aria-hidden="true">#</a> 4、GLITCH</h2><p>1、universe stylize - GLITCH</p><h2 id="_5、rgb分离" tabindex="-1"><a class="header-anchor" href="#_5、rgb分离" aria-hidden="true">#</a> 5、RGB分离</h2><p>1、s_TimeWarpRGB<br> 2、Simple RGB Separation<br> 3、s_DistrotRGB（RGB边缘）<br><code>s_TVdamage，CC Toner，模糊，twitch，差值</code><br> 4、uni.Chromatic Aberration<br><code>光学补偿、blur</code><br> 5、S_WarpChroma</p><h2 id="_6、shake" tabindex="-1"><a class="header-anchor" href="#_6、shake" aria-hidden="true">#</a> 6、Shake</h2><p>1、s_shake<br> 参数、预设<br> wiggle，垂直，旋转</p><h2 id="_7、发光" tabindex="-1"><a class="header-anchor" href="#_7、发光" aria-hidden="true">#</a> 7、发光</h2><p>1、deep glow<br> 2、Shine<br> 3、of光<br> 4、StarGlow</p><h2 id="_8、模糊" tabindex="-1"><a class="header-anchor" href="#_8、模糊" aria-hidden="true">#</a> 8、模糊</h2><p>1、动态模糊<br> 2、RSMB<br> 3、Bcc lens blur obs<br> 4、S_BlurDirectional<br> 5、定向模糊<br> 6、镜像模糊<br> 7、CC Wide Time</p><h2 id="_9、闪烁" tabindex="-1"><a class="header-anchor" href="#_9、闪烁" aria-hidden="true">#</a> 9、闪烁</h2><p>1、闪烁s_Flicker<br> 2、纯色层（全/局）</p><h2 id="_10、halftone" tabindex="-1"><a class="header-anchor" href="#_10、halftone" aria-hidden="true">#</a> 10、HalfTone</h2><p>1、BCC_HalfTone （以明暗度画点）</p>`,21),o=i('<h2 id="_11、变形、波形变形" tabindex="-1"><a class="header-anchor" href="#_11、变形、波形变形" aria-hidden="true">#</a> 11、变形、波形变形</h2><p><code>文字效果、杂色</code></p><h2 id="_12、omino" tabindex="-1"><a class="header-anchor" href="#_12、omino" aria-hidden="true">#</a> 12、Omino</h2><h2 id="_13、流体" tabindex="-1"><a class="header-anchor" href="#_13、流体" aria-hidden="true">#</a> 13、流体</h2><h2 id="_14、vhs" tabindex="-1"><a class="header-anchor" href="#_14、vhs" aria-hidden="true">#</a> 14、VHS</h2><p>1、s_TVDamage<br> 2、s_FilmDamage<br> 3、Bcc damaged TV Dissolve<br> 4、looks -&gt; Film Negative<br> 5、s_sharpen<br> 6、signal+偏移</p>',6),b=i('<p>7、杂色<br> 8、nui.VHS Transitioin（带偏移，RGB分离）<br> 9、uni.VHS（不带偏移）<br> 10、毛边<br> 11、BCC_DamageTV<br> 12、uni.channel surf<br> 13、AE Pixel Sorter2</p><h2 id="_15、背景" tabindex="-1"><a class="header-anchor" href="#_15、背景" aria-hidden="true">#</a> 15、背景</h2><p>1、CC Kaleida 旋转复制平铺<br> 2、棋盘（两个纯色层相加）<br> 3、百叶窗 +（极坐标）<br> 4、百叶窗 + 文字中继器<br> 5、CC Repetile / 动态拼贴</p><h2 id="_16、色调分离" tabindex="-1"><a class="header-anchor" href="#_16、色调分离" aria-hidden="true">#</a> 16、色调分离</h2><h2 id="_17、复古点刺" tabindex="-1"><a class="header-anchor" href="#_17、复古点刺" aria-hidden="true">#</a> 17、复古点刺</h2>',5),_=i('<h2 id="_18、single-frame" tabindex="-1"><a class="header-anchor" href="#_18、single-frame" aria-hidden="true">#</a> 18、single frame</h2><p>1、通道合成器<br> 2、反转<br> 3、S_ScanLines</p><h2 id="_19、杂色" tabindex="-1"><a class="header-anchor" href="#_19、杂色" aria-hidden="true">#</a> 19、杂色</h2><h2 id="_20、颜色处理-色彩-画面" tabindex="-1"><a class="header-anchor" href="#_20、颜色处理-色彩-画面" aria-hidden="true">#</a> 20、颜色处理/色彩/画面</h2><p>1、颜色键<br> BCC Linear Color Key<br> BCC two way key（双路键控）<br> 线性颜色键</p><p>2、渐变<br> 四色渐变<br> s_PsykoStripes（光敏性癫痫渐变）<br> s_GradientMulti（多色渐变）<br> 梯度渐变</p><p>3、CC Toner<br> 4、色阶<br> 5、暗角s_Vignette<br> 6、曝光度<br> 7、线性颜色键<br> 8、填充<br> 9、CC Jaws<br> 10、BCC Colorize (SF)<br> 11、反转<br> 12、S_Invert（相较反转亮-&gt;暗，暗-&gt;亮）</p><h2 id="_21、文字处理" tabindex="-1"><a class="header-anchor" href="#_21、文字处理" aria-hidden="true">#</a> 21、文字处理</h2><p>1、文字路径动画/蒙版（右击文字创建）</p><h2 id="_22、字体内部擦除" tabindex="-1"><a class="header-anchor" href="#_22、字体内部擦除" aria-hidden="true">#</a> 22、字体内部擦除</h2><h2 id="_23、音频处理" tabindex="-1"><a class="header-anchor" href="#_23、音频处理" aria-hidden="true">#</a> 23、音频处理</h2><h2 id="_24、粒子" tabindex="-1"><a class="header-anchor" href="#_24、粒子" aria-hidden="true">#</a> 24、粒子</h2><p>1、Particular</p><h2 id="_25、置换图" tabindex="-1"><a class="header-anchor" href="#_25、置换图" aria-hidden="true">#</a> 25、置换图</h2><p>1、置换图<br> 2、displacer pro + s_shake</p><h3 id="_26、像素" tabindex="-1"><a class="header-anchor" href="#_26、像素" aria-hidden="true">#</a> 26、像素</h3><p>1、PixDither</p><h2 id="_26、光线" tabindex="-1"><a class="header-anchor" href="#_26、光线" aria-hidden="true">#</a> 26、光线</h2><p>1、流光<br> 纯色层 + 分型杂色 + deep glow</p><p>2、勾光/星光<br> 得到轮廓 + 3D Stroke（明暗旋转） + Starglow</p><p>3、聚光灯、舞台灯<br> 新建灯光，在上方创建纯色层，添加效果Lux，颜色通过灯光调</p><p>4、Optical Flares（OF saber）<br> 纯色层上添加</p><p>5、Real Glow、Deep Glow</p><p>6、粒子光<br> 摄像机，空对象，粒子，点光源</p>',24),p=r("h2",{id:"_27、抠像",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#_27、抠像","aria-hidden":"true"},"#"),d(" 27、抠像")],-1),u=r("p",null,[d("1、roto"),r("br"),d(" 2、keylight")],-1);function m(f,v){const e=h("BiliBili");return s(),t("div",null,[l,a(e,{bvid:"BV1MT411j73y"}),o,a(e,{bvid:"BV1Ce411c7Qk"}),b,a(e,{bvid:"BV1PA411T7mj"}),_,a(e,{bvid:"BV1Aq4y1y7LE"}),p,u])}const C=n(c,[["render",m],["__file","一些插件.html.vue"]]);export{C as default};
