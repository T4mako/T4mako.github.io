const e=JSON.parse('{"key":"v-465c9201","path":"/code/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99.html","title":"面向对象设计基本原则","lang":"zh-CN","frontmatter":{"title":"面向对象设计基本原则","category":["基础知识"],"tag":["面向对象"],"description":"UML 类图简介 UML（Unified Modeling Language） 类图（Class Diagram）属于结构图（静态图），常用于被描述一个系统的静态结构。 UML 类图包含 类、接口、泛化（继承）、实现、组合、聚合、关联、依赖关系 1. 类的 UML 图 类图分为三层结构： 第一层：名字层，如果类的名字是斜体，则这个类是抽象类 第二层：变量层（属性层），格式： 变量名:类型 第三层：方法层，格式：方法名(参数列表)","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"面向对象设计基本原则"}],["meta",{"property":"og:description","content":"UML 类图简介 UML（Unified Modeling Language） 类图（Class Diagram）属于结构图（静态图），常用于被描述一个系统的静态结构。 UML 类图包含 类、接口、泛化（继承）、实现、组合、聚合、关联、依赖关系 1. 类的 UML 图 类图分为三层结构： 第一层：名字层，如果类的名字是斜体，则这个类是抽象类 第二层：变量层（属性层），格式： 变量名:类型 第三层：方法层，格式：方法名(参数列表)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"面向对象"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"面向对象设计基本原则\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"UML 类图简介","slug":"uml-类图简介","link":"#uml-类图简介","children":[{"level":3,"title":"1. 类的 UML 图","slug":"_1-类的-uml-图","link":"#_1-类的-uml-图","children":[]},{"level":3,"title":"2. 接口的 UML 图","slug":"_2-接口的-uml-图","link":"#_2-接口的-uml-图","children":[]},{"level":3,"title":"3. 泛化（继承）关系（Generalization/extends）","slug":"_3-泛化-继承-关系-generalization-extends","link":"#_3-泛化-继承-关系-generalization-extends","children":[]},{"level":3,"title":"4、实现关系（implements）","slug":"_4、实现关系-implements","link":"#_4、实现关系-implements","children":[]},{"level":3,"title":"5、组合关系（Composition）","slug":"_5、组合关系-composition","link":"#_5、组合关系-composition","children":[]},{"level":3,"title":"6、聚合关系（Aggregation）","slug":"_6、聚合关系-aggregation","link":"#_6、聚合关系-aggregation","children":[]},{"level":3,"title":"7、关联关系（Association）","slug":"_7、关联关系-association","link":"#_7、关联关系-association","children":[]},{"level":3,"title":"8. 依赖关系（Dependency）","slug":"_8-依赖关系-dependency","link":"#_8-依赖关系-dependency","children":[]},{"level":3,"title":"9. 注释","slug":"_9-注释","link":"#_9-注释","children":[]},{"level":3,"title":"10. 设计类的原则","slug":"_10-设计类的原则","link":"#_10-设计类的原则","children":[]}]}],"readingTime":{"minutes":3.35,"words":1005},"filePathRelative":"code/基础知识/面向对象设计基本原则.md","excerpt":"<h2> UML 类图简介</h2>\\n<p>UML（Unified Modeling Language） 类图（Class Diagram）属于结构图（静态图），常用于被描述一个系统的静态结构。</p>\\n<p>UML 类图包含 类、接口、泛化（继承）、实现、组合、聚合、关联、依赖关系</p>\\n<h3> 1. 类的 UML 图</h3>\\n<p>类图分为三层结构：</p>\\n<ul>\\n<li>第一层：名字层，如果类的名字是斜体，则这个类是抽象类</li>\\n<li>第二层：变量层（属性层），格式： <code>变量名:类型</code></li>\\n<li>第三层：方法层，格式：<code>方法名(参数列表)</code></li>\\n</ul>","autoDesc":true}');export{e as data};
