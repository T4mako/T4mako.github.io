const n=JSON.parse('{"key":"v-7cb73682","path":"/code/java/Java%20%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/11%E3%80%81%E6%9E%9A%E4%B8%BE%E7%B1%BB.html","title":"11、枚举类","lang":"zh-CN","frontmatter":{"title":"11、枚举类","icon":"java","order":11,"category":["java"],"tag":["基础语法","java"],"description":"枚举类 1、枚举类的使用 枚举类：类的对象是有限且确定的 当需要定义一组常量时，建议用枚举类 如果枚举类只有一个对象，则可以作为单例模式实现 2、如何定义枚举类 使用enum关键字定义枚举类 public class SeasonTest1 { public static void main(String[] args) { Season1 summer = Season1.SUMMER; System.out.println(summer); } } enum Season1 { //1、提供当前枚举类的队形，多个对象用\\",\\"隔开，末尾对象\\";\\"结束 SPRING(\\"春天\\", \\"春暖花开\\"), SUMMER(\\"夏天\\", \\"夏日炎炎\\"), AUTUMN(\\"秋天\\", \\"秋高气爽\\"), WINTER(\\"冬天\\", \\"冰天雪地\\"); //2、声明Season对象的属性 private final String seasonName; private final String SeasonDesc; //3、私有化类的构造器，并给对象属性赋值 private Season1(String seasonName, String seasonDesc) { this.seasonName = seasonName; SeasonDesc = seasonDesc; } //4、其他诉求:获取枚举类对象的属性，提供toString方法 public String getSeasonName() { return seasonName; } public String getSeasonDesc() { return SeasonDesc; } }","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/java/Java%20%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/11%E3%80%81%E6%9E%9A%E4%B8%BE%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"11、枚举类"}],["meta",{"property":"og:description","content":"枚举类 1、枚举类的使用 枚举类：类的对象是有限且确定的 当需要定义一组常量时，建议用枚举类 如果枚举类只有一个对象，则可以作为单例模式实现 2、如何定义枚举类 使用enum关键字定义枚举类 public class SeasonTest1 { public static void main(String[] args) { Season1 summer = Season1.SUMMER; System.out.println(summer); } } enum Season1 { //1、提供当前枚举类的队形，多个对象用\\",\\"隔开，末尾对象\\";\\"结束 SPRING(\\"春天\\", \\"春暖花开\\"), SUMMER(\\"夏天\\", \\"夏日炎炎\\"), AUTUMN(\\"秋天\\", \\"秋高气爽\\"), WINTER(\\"冬天\\", \\"冰天雪地\\"); //2、声明Season对象的属性 private final String seasonName; private final String SeasonDesc; //3、私有化类的构造器，并给对象属性赋值 private Season1(String seasonName, String seasonDesc) { this.seasonName = seasonName; SeasonDesc = seasonDesc; } //4、其他诉求:获取枚举类对象的属性，提供toString方法 public String getSeasonName() { return seasonName; } public String getSeasonDesc() { return SeasonDesc; } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"基础语法"}],["meta",{"property":"article:tag","content":"java"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11、枚举类\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"枚举类","slug":"枚举类","link":"#枚举类","children":[{"level":3,"title":"1、枚举类的使用","slug":"_1、枚举类的使用","link":"#_1、枚举类的使用","children":[]},{"level":3,"title":"2、如何定义枚举类","slug":"_2、如何定义枚举类","link":"#_2、如何定义枚举类","children":[]},{"level":3,"title":"3、enum的主要方法","slug":"_3、enum的主要方法","link":"#_3、enum的主要方法","children":[]},{"level":3,"title":"4、使用enum关键字定义的枚举类实现接口的情况","slug":"_4、使用enum关键字定义的枚举类实现接口的情况","link":"#_4、使用enum关键字定义的枚举类实现接口的情况","children":[]}]}],"readingTime":{"minutes":1.83,"words":550},"filePathRelative":"code/java/Java 基础/语法基础/11、枚举类.md","excerpt":"<h2> 枚举类</h2>\\n<h3> 1、枚举类的使用</h3>\\n<ol>\\n<li>枚举类：类的对象是有限且确定的</li>\\n<li>当需要定义一组常量时，建议用枚举类</li>\\n<li>如果枚举类只有一个对象，则可以作为单例模式实现</li>\\n</ol>\\n<h3> 2、如何定义枚举类</h3>\\n<p>使用<code>enum</code>关键字定义枚举类</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">SeasonTest1</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">Season1</span> summer <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Season1</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">SUMMER</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>summer<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">enum</span> <span class=\\"token class-name\\">Season1</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//1、提供当前枚举类的队形，多个对象用\\",\\"隔开，末尾对象\\";\\"结束</span>\\n    <span class=\\"token function\\">SPRING</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"春天\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"春暖花开\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function\\">SUMMER</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"夏天\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"夏日炎炎\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function\\">AUTUMN</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"秋天\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"秋高气爽\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function\\">WINTER</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"冬天\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"冰天雪地\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">//2、声明Season对象的属性</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">String</span> seasonName<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">String</span> <span class=\\"token class-name\\">SeasonDesc</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">//3、私有化类的构造器，并给对象属性赋值</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Season1</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> seasonName<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> seasonDesc<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>seasonName <span class=\\"token operator\\">=</span> seasonName<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">SeasonDesc</span> <span class=\\"token operator\\">=</span> seasonDesc<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    \\n    <span class=\\"token comment\\">//4、其他诉求:获取枚举类对象的属性，提供toString方法</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">getSeasonName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> seasonName<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">getSeasonDesc</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token class-name\\">SeasonDesc</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
