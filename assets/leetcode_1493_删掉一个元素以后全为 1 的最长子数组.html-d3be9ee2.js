import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as c,c as l,e as a,b as n,d as t,f as i}from"./app-00052583.js";const u={},r=n("h1",{id:"_1493-删掉一个元素以后全为-1-的最长子数组",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1493-删掉一个元素以后全为-1-的最长子数组","aria-hidden":"true"},"#"),t(" 1493. 删掉一个元素以后全为 1 的最长子数组")],-1),k={href:"https://leetcode.cn/problems/longest-subarray-of-1s-after-deleting-one-element/description/?envType=study-plan-v2&envId=leetcode-75",target:"_blank",rel:"noopener noreferrer"},d=i(`<p>解题思路：</p><ul><li>使用滑动窗口，定义 left 和 right，定义 next 指向 left 和 right 之间的第一个 0 用于快速移动 left</li><li>先将 right 移动到第二个0，更新 next</li><li>使用循环语句对 right 指向的数字判断<br> 如果 right 为 0，left移动到 下一个 0 的后一个位置，更新 count，res，left，right，next<br> 如果 right 为 1， right++，更新 count，res，right</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">longestSubarray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> next <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// 将 right 移动到第二个0，更新 next</span>
        <span class="token keyword">int</span> flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span> flag <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>flag<span class="token operator">--</span><span class="token punctuation">;</span>next <span class="token operator">=</span> right<span class="token punctuation">;</span><span class="token punctuation">}</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>right<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        res <span class="token operator">=</span> count<span class="token punctuation">;</span>
        <span class="token comment">// 遍历到末尾，返回长度-1</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>right <span class="token operator">&gt;=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// 如果 right 为 0，left移动到 下一个 0 的后一个位置，更新 count，res，left，right，next</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                count <span class="token operator">=</span> count <span class="token operator">-</span> next <span class="token operator">+</span> left<span class="token punctuation">;</span>
                left <span class="token operator">=</span> next <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                next <span class="token operator">=</span> right<span class="token punctuation">;</span>
                right<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 如果 right 为 1， right++，更新 count,res,right</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                right<span class="token operator">++</span><span class="token punctuation">;</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
                res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function m(v,b){const e=s("Badge"),p=s("ExternalLinkIcon");return c(),l("div",null,[r,a(e,{text:"中等",type:"warning",vertical:"middle"}),n("p",null,[n("a",k,[t("题目描述"),a(p)])]),d])}const _=o(u,[["render",m],["__file","leetcode_1493_删掉一个元素以后全为 1 的最长子数组.html.vue"]]);export{_ as default};
