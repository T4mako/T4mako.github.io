const e=JSON.parse('{"key":"v-7e6074a3","path":"/code/java/Java%20%E5%9F%BA%E7%A1%80/%E5%B8%B8%E7%94%A8%E7%B1%BB/Stream%20API.html","title":"Stream API 的理解与使用","lang":"zh-CN","frontmatter":{"date":"2023-08-04T00:00:00.000Z","icon":"java","category":["java"],"tag":["基础语法","java"],"description":"Stream API 的理解与使用 流表示包含着一系列元素的集合，可以对其做不同类型的操作，用来对这些元素执行计算 Stream执行流程 Stream的实例化 一系列中间操作（过滤，映射、......） 终止操作 中间操作与终端操作: 中间操作会再次返回一个流，所以可以链接多个中间操作，上述代码中的 filter 过滤，map 对象转换，sorted 排序，就属于中间操作。 终端操作是对流操作的一个结束动作，一般返回 void 或者一个非流的结果。上述代码中的 forEach循环 就是一个终止操作。","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/java/Java%20%E5%9F%BA%E7%A1%80/%E5%B8%B8%E7%94%A8%E7%B1%BB/Stream%20API.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"Stream API 的理解与使用"}],["meta",{"property":"og:description","content":"Stream API 的理解与使用 流表示包含着一系列元素的集合，可以对其做不同类型的操作，用来对这些元素执行计算 Stream执行流程 Stream的实例化 一系列中间操作（过滤，映射、......） 终止操作 中间操作与终端操作: 中间操作会再次返回一个流，所以可以链接多个中间操作，上述代码中的 filter 过滤，map 对象转换，sorted 排序，就属于中间操作。 终端操作是对流操作的一个结束动作，一般返回 void 或者一个非流的结果。上述代码中的 forEach循环 就是一个终止操作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"基础语法"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2023-08-04T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Stream API 的理解与使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-04T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、一些 Stream API","slug":"_1、一些-stream-api","link":"#_1、一些-stream-api","children":[{"level":3,"title":"创建流","slug":"创建流","link":"#创建流","children":[]},{"level":3,"title":"中间操作","slug":"中间操作","link":"#中间操作","children":[]},{"level":3,"title":"终止操作","slug":"终止操作","link":"#终止操作","children":[]},{"level":3,"title":"collect(),reduce(),flatMap()","slug":"collect-reduce-flatmap","link":"#collect-reduce-flatmap","children":[]}]},{"level":2,"title":"2、不同类型的 Stream 流","slug":"_2、不同类型的-stream-流","link":"#_2、不同类型的-stream-流","children":[{"level":3,"title":"创建流的方式","slug":"创建流的方式","link":"#创建流的方式","children":[]},{"level":3,"title":"原始流和对象流的转换","slug":"原始流和对象流的转换","link":"#原始流和对象流的转换","children":[]}]},{"level":2,"title":"3、Stream 流的处理顺序","slug":"_3、stream-流的处理顺序","link":"#_3、stream-流的处理顺序","children":[{"level":3,"title":"垂直执行","slug":"垂直执行","link":"#垂直执行","children":[]},{"level":3,"title":"水平执行","slug":"水平执行","link":"#水平执行","children":[]}]},{"level":2,"title":"4、数据流复用","slug":"_4、数据流复用","link":"#_4、数据流复用","children":[]},{"level":2,"title":"5、常用操作","slug":"_5、常用操作","link":"#_5、常用操作","children":[{"level":3,"title":"collect()收集器","slug":"collect-收集器","link":"#collect-收集器","children":[]},{"level":3,"title":"自定义收集器","slug":"自定义收集器","link":"#自定义收集器","children":[]},{"level":3,"title":"FlatMap()","slug":"flatmap","link":"#flatmap","children":[]},{"level":3,"title":"Reduce()","slug":"reduce","link":"#reduce","children":[]}]},{"level":2,"title":"6、并行流","slug":"_6、并行流","link":"#_6、并行流","children":[{"level":3,"title":"创建并行流","slug":"创建并行流","link":"#创建并行流","children":[]}]}],"readingTime":{"minutes":9.45,"words":2835},"filePathRelative":"code/java/Java 基础/常用类/Stream API.md","localizedDate":"2023年8月4日","excerpt":"<h1> Stream API 的理解与使用</h1>\\n<p>流表示包含着一系列<code>元素的集合</code>，可以对其做不同类型的操作，用来对这些元素执行计算</p>\\n<p>Stream执行流程</p>\\n<ul>\\n<li>Stream的实例化</li>\\n<li>一系列中间操作（过滤，映射、......）</li>\\n<li>终止操作</li>\\n</ul>\\n<!-- more    -->\\n<p>中间操作与终端操作:</p>\\n<ol>\\n<li>中间操作会再次返回一个流，所以可以链接多个中间操作，上述代码中的 filter 过滤，map 对象转换，sorted 排序，就属于中间操作。</li>\\n<li>终端操作是对流操作的一个结束动作，一般返回 <code>void</code> 或者一个<code>非流的结果</code>。上述代码中的 forEach循环 就是一个终止操作。</li>\\n</ol>","autoDesc":true}');export{e as data};
