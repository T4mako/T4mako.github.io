const e=JSON.parse('{"key":"v-c473b22c","path":"/code/leetcode/leetcode_027_%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0.html","title":"027_移除元素","lang":"zh-CN","frontmatter":{"description":"027_移除元素 tag：数组、双指针 难度：简单 题目： 给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。 不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。 元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。 说明: 为什么返回数值是整数，但输出的答案是数组呢? 请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。 你可以想象内部操作如下: // nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝 int len = removeElement(nums, val); // 在函数里修改输入数组对于调用者是可见的。 // 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。 for (int i = 0; i &lt; len; i++) { print(nums[i]); } 示例 1： 输入：nums = [3,2,2,3], val = 3 输出：2, nums = [2,2] 解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。 示例 2： 输入：nums = [0,1,2,2,3,0,4,2], val = 2 输出：5, nums = [0,1,4,0,3] 解释：函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面的元素。 来源：力扣（LeetCode） 链接：https://leetcode.cn/problems/remove-element 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/leetcode/leetcode_027_%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"027_移除元素"}],["meta",{"property":"og:description","content":"027_移除元素 tag：数组、双指针 难度：简单 题目： 给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。 不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。 元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。 说明: 为什么返回数值是整数，但输出的答案是数组呢? 请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。 你可以想象内部操作如下: // nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝 int len = removeElement(nums, val); // 在函数里修改输入数组对于调用者是可见的。 // 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。 for (int i = 0; i &lt; len; i++) { print(nums[i]); } 示例 1： 输入：nums = [3,2,2,3], val = 3 输出：2, nums = [2,2] 解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。 示例 2： 输入：nums = [0,1,2,2,3,0,4,2], val = 2 输出：5, nums = [0,1,4,0,3] 解释：函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面的元素。 来源：力扣（LeetCode） 链接：https://leetcode.cn/problems/remove-element 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"027_移除元素\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"解法：","slug":"解法","link":"#解法","children":[]}],"readingTime":{"minutes":2.16,"words":648},"filePathRelative":"code/leetcode/leetcode_027_移除元素.md","excerpt":"<h1> 027_移除元素</h1>\\n<blockquote>\\n<p>tag：数组、双指针</p>\\n<p>难度：简单</p>\\n</blockquote>\\n<blockquote>\\n<p>题目：</p>\\n<p>给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。</p>\\n<p>不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。</p>\\n<p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p>\\n<p>说明:</p>\\n<p>为什么返回数值是整数，但输出的答案是数组呢?</p>\\n<p>请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。</p>\\n<p>你可以想象内部操作如下:</p>\\n<p>// nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝<br>\\nint len = removeElement(nums, val);</p>\\n<p>// 在函数里修改输入数组对于调用者是可见的。<br>\\n// 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。<br>\\nfor (int i = 0; i &lt; len; i++) {<br>\\nprint(nums[i]);<br>\\n}</p>\\n<p>示例 1：</p>\\n<p>输入：nums = [3,2,2,3], val = 3<br>\\n输出：2, nums = [2,2]<br>\\n解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。<br>\\n示例 2：</p>\\n<p>输入：nums = [0,1,2,2,3,0,4,2], val = 2<br>\\n输出：5, nums = [0,1,4,0,3]<br>\\n解释：函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面的元素。</p>\\n<p>来源：力扣（LeetCode）<br>\\n链接：<a href=\\"https://leetcode.cn/problems/remove-element\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://leetcode.cn/problems/remove-element</a><br>\\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
