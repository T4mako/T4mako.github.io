import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,a as n,b as s,d as l,e as a}from"./app-25baac28.js";const i={},u=n("h1",{id:"_019-删除链表的倒数第-n-个结点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_019-删除链表的倒数第-n-个结点","aria-hidden":"true"},"#"),s(" 019_删除链表的倒数第 N 个结点")],-1),r=n("blockquote",null,[n("p",null,"tag：链表、双指针"),n("p",null,"难度：中等")],-1),d=a("<p>题目：</p><p>给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。</p><p>示例 1：</p><p>输入：head = [1,2,3,4,5], n = 2<br> 输出：[1,2,3,5]<br> 示例 2：</p><p>输入：head = [1], n = 1<br> 输出：[]<br> 示例 3：</p><p>输入：head = [1,2], n = 1<br> 输出：[1]</p>",6),k=n("br",null,null,-1),v={href:"https://leetcode.cn/problems/remove-nth-node-from-end-of-list",target:"_blank",rel:"noopener noreferrer"},m=n("br",null,null,-1),_=a(`<h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">removeNthFromEnd</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> left <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> right <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> s <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>s <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
            s <span class="token operator">=</span> s<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">==</span> count<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>n <span class="token operator">&lt;</span> count<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            right <span class="token operator">=</span> right<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            left <span class="token operator">=</span> left<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            count<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            left<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> head<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            left<span class="token punctuation">.</span>next <span class="token operator">=</span> right<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token keyword">return</span> head<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>先遍历一边链表，得出链表的总个数count，如果n=count，返回head.next，否则定义一个left和right指针，指针不断后移，count--，直到count==n，判断right后面是否有值，如果没有，left.next = null，否则left.next = right.next</p>`,3);function b(h,f){const e=p("ExternalLinkIcon");return o(),c("div",null,[u,r,n("blockquote",null,[d,n("p",null,[s("来源：力扣（LeetCode）"),k,s(" 链接："),n("a",v,[s("https://leetcode.cn/problems/remove-nth-node-from-end-of-list"),l(e)]),m,s(" 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。")])]),_])}const y=t(i,[["render",b],["__file","leetcode_019_删除链表的倒数第 N 个结点.html.vue"]]);export{y as default};
