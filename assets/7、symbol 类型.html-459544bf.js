const e=JSON.parse('{"key":"v-2d4c5c52","path":"/code/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/TypeScript/7%E3%80%81symbol%20%E7%B1%BB%E5%9E%8B.html","title":"symbol 类型","lang":"zh-CN","frontmatter":{"title":"symbol 类型","date":"2023-08-15T00:00:00.000Z","category":["TypeScript"],"order":7,"description":"七、symbol 类型 1、简介 Symbol 是 ES2015 新引入的一种原始类型的值。它类似于字符串，但是每一个 Symbol 值都是独一无二的，与其他任何值都不相等。 Symbol 值通过Symbol()函数生成。在 TypeScript 里面，Symbol 的类型使用symbol表示。 let x:symbol = Symbol(); let y:symbol = Symbol(); x === y // false","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/TypeScript/7%E3%80%81symbol%20%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"symbol 类型"}],["meta",{"property":"og:description","content":"七、symbol 类型 1、简介 Symbol 是 ES2015 新引入的一种原始类型的值。它类似于字符串，但是每一个 Symbol 值都是独一无二的，与其他任何值都不相等。 Symbol 值通过Symbol()函数生成。在 TypeScript 里面，Symbol 的类型使用symbol表示。 let x:symbol = Symbol(); let y:symbol = Symbol(); x === y // false"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:published_time","content":"2023-08-15T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"symbol 类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-15T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"七、symbol 类型","slug":"七、symbol-类型","link":"#七、symbol-类型","children":[{"level":3,"title":"1、简介","slug":"_1、简介","link":"#_1、简介","children":[]},{"level":3,"title":"2、unique symbol","slug":"_2、unique-symbol","link":"#_2、unique-symbol","children":[]},{"level":3,"title":"3、类型推断","slug":"_3、类型推断","link":"#_3、类型推断","children":[]}]}],"readingTime":{"minutes":4.18,"words":1254},"filePathRelative":"code/前端开发/TypeScript/7、symbol 类型.md","localizedDate":"2023年8月15日","excerpt":"<h2> 七、symbol 类型</h2>\\n<h3> 1、简介</h3>\\n<p>Symbol 是 ES2015 新引入的一种原始类型的值。它类似于字符串，但是每一个 Symbol 值都是独一无二的，与其他任何值都不相等。</p>\\n<p>Symbol 值通过<code>Symbol()</code>函数生成。在 TypeScript 里面，Symbol 的类型使用<code>symbol</code>表示。</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">let</span> x<span class=\\"token operator\\">:</span><span class=\\"token builtin\\">symbol</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">Symbol</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">let</span> y<span class=\\"token operator\\">:</span><span class=\\"token builtin\\">symbol</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">Symbol</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\nx <span class=\\"token operator\\">===</span> y <span class=\\"token comment\\">// false</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
