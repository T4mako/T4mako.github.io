const e=JSON.parse('{"key":"v-625a09d6","path":"/code/java/Java%20%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/14%E3%80%81%E6%B3%9B%E5%9E%8B.html","title":"14、泛型","lang":"zh-CN","frontmatter":{"title":"14、泛型","icon":"java","order":14,"category":["java"],"tag":["基础语法","java"],"description":"泛型 泛型（Generics）在 JDK1.5 推出，目的是建立具有类型的安全集合框架 1、泛型的使用 集合接口或集合类在 jdk5.0 时都修改为带泛型的结构 在实例化集合类时，可以指明具体的泛型类型 指明完以后，在集合类或接口中凡是定义类或接口时，内部结构使用到类的泛型的位置，都指定为实例化的泛型类型。 泛型的类型必须是一个类，不能是基本数据类型。需要用到基本数据类型的位置，应使用包装类 如果实例化时，没有指明泛型类型，默认类型为 java.lang.Object","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/java/Java%20%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/14%E3%80%81%E6%B3%9B%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"14、泛型"}],["meta",{"property":"og:description","content":"泛型 泛型（Generics）在 JDK1.5 推出，目的是建立具有类型的安全集合框架 1、泛型的使用 集合接口或集合类在 jdk5.0 时都修改为带泛型的结构 在实例化集合类时，可以指明具体的泛型类型 指明完以后，在集合类或接口中凡是定义类或接口时，内部结构使用到类的泛型的位置，都指定为实例化的泛型类型。 泛型的类型必须是一个类，不能是基本数据类型。需要用到基本数据类型的位置，应使用包装类 如果实例化时，没有指明泛型类型，默认类型为 java.lang.Object"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"基础语法"}],["meta",{"property":"article:tag","content":"java"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"14、泛型\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"泛型","slug":"泛型","link":"#泛型","children":[{"level":3,"title":"1、泛型的使用","slug":"_1、泛型的使用","link":"#_1、泛型的使用","children":[]},{"level":3,"title":"3、泛型在继承方面的体现","slug":"_3、泛型在继承方面的体现","link":"#_3、泛型在继承方面的体现","children":[]},{"level":3,"title":"4、通配符的使用","slug":"_4、通配符的使用","link":"#_4、通配符的使用","children":[]}]}],"readingTime":{"minutes":5.97,"words":1791},"filePathRelative":"code/java/Java 基础/语法基础/14、泛型.md","excerpt":"<h2> 泛型</h2>\\n<p>泛型（Generics）在 JDK1.5 推出，目的是建立具有类型的安全集合框架</p>\\n<h3> 1、泛型的使用</h3>\\n<ul>\\n<li>集合接口或集合类在 jdk5.0 时都修改为带泛型的结构</li>\\n<li>在实例化集合类时，可以指明具体的泛型类型</li>\\n<li>指明完以后，在集合类或接口中凡是定义类或接口时，内部结构使用到类的泛型的位置，都指定为实例化的泛型类型。</li>\\n<li>泛型的类型必须是一个类，不能是基本数据类型。需要用到基本数据类型的位置，应使用包装类</li>\\n<li>如果实例化时，没有指明泛型类型，默认类型为 java.lang.Object</li>\\n</ul>","autoDesc":true}');export{e as data};
