import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,f as t}from"./app-ec862884.js";const e={},p=t(`<p>java.util.regex 包提供了 Patter 类与 Matcher 类用于模式匹配</p><h2 id="pattern-对象与-matcher-对象的创建" tabindex="-1"><a class="header-anchor" href="#pattern-对象与-matcher-对象的创建" aria-hidden="true">#</a> Pattern 对象与 Matcher 对象的创建：</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Srring</span> input <span class="token operator">=</span> <span class="token string">&quot;待匹配字符&quot;</span>
<span class="token class-name">String</span> regex <span class="token operator">=</span> <span class="token string">&quot;\\\\w+@\\\\w+\\\\.[a-z]+(\\\\.[a-z]+)?&quot;</span> <span class="token comment">// 创建邮箱验证正则表达式</span>
<span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建 pattern 对象</span>
<span class="token class-name">Matcher</span> matcher <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建 matcher 对象</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="matcher-对象的方法" tabindex="-1"><a class="header-anchor" href="#matcher-对象的方法" aria-hidden="true">#</a> matcher 对象的方法：</h2><table><thead><tr><th>方法</th><th>含义</th></tr></thead><tbody><tr><td>boolean find()</td><td>寻找 input 和 regex 匹配的子序列，返回 true 或 false，若返回 true，可调用 start()，end()，group() 方法</td></tr><tr><td>boolean find(int start)</td><td>从 input 的 start 开始寻找</td></tr><tr><td>boolean matches()</td><td>判断 input 和 regex 是否完全匹配</td></tr><tr><td>String replaceAll(String replacement)</td><td>将 input 中所有和 regex 匹配的替换成 replacement（注意 input 不变）</td></tr><tr><td>String replaceFirst(String replacement)</td><td>将 input 中所有和 regex 匹配的第一个子字符序列替换成 replacement（注意 input 不变）</td></tr><tr><td>String group()</td><td>返回一个 String 对象，即 find() 匹配到的子字符序列</td></tr></tbody></table><h2 id="实例" tabindex="-1"><a class="header-anchor" href="#实例" aria-hidden="true">#</a> 实例</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> regex <span class="token operator">=</span> <span class="token string">&quot;\\\\w+@\\\\w+\\\\.[a-z]+(\\\\.[a-z]+)?&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> input <span class="token operator">=</span> <span class="token string">&quot;haha email: haha@163.com;Wang email: wang@qq.com&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Matcher</span> matcher <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> matcher<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
输出：
12 24
haha@163.com
37 48
wang@qq.com
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),c=[p];function o(i,l){return a(),s("div",null,c)}const d=n(e,[["render",o],["__file","Pattern 与 Matcher 类.html.vue"]]);export{d as default};
