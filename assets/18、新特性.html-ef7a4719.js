const a=JSON.parse('{"key":"v-7b3fd3a6","path":"/code/java/Java%20%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/18%E3%80%81%E6%96%B0%E7%89%B9%E6%80%A7.html","title":"18、新特性","lang":"zh-CN","frontmatter":{"title":"18、新特性","icon":"java","order":18,"category":["java"],"tag":["基础语法","java","JDK"],"description":"Java8新特性 1、Lambda表达式 1、举例：(o1,o2) -&gt; Integer.compare(o1,o2); 2、格式： 接口名 对象名 = lambda形参列表 -&gt; lambda体 箭头左边：lambda形参列表（接口中的抽象方法的形参列表） 箭头右边：lambda体：（重写的抽象方法的方法体） 3、Lambda表达式的使用（分为六种情况介绍）","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/java/Java%20%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/18%E3%80%81%E6%96%B0%E7%89%B9%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"18、新特性"}],["meta",{"property":"og:description","content":"Java8新特性 1、Lambda表达式 1、举例：(o1,o2) -&gt; Integer.compare(o1,o2); 2、格式： 接口名 对象名 = lambda形参列表 -&gt; lambda体 箭头左边：lambda形参列表（接口中的抽象方法的形参列表） 箭头右边：lambda体：（重写的抽象方法的方法体） 3、Lambda表达式的使用（分为六种情况介绍）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"基础语法"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"JDK"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"18、新特性\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Java8新特性","slug":"java8新特性","link":"#java8新特性","children":[{"level":3,"title":"1、Lambda表达式","slug":"_1、lambda表达式","link":"#_1、lambda表达式","children":[]},{"level":3,"title":"2、函数式接口","slug":"_2、函数式接口","link":"#_2、函数式接口","children":[]},{"level":3,"title":"3、方法引用","slug":"_3、方法引用","link":"#_3、方法引用","children":[]},{"level":3,"title":"4、构造器引用和项目引用","slug":"_4、构造器引用和项目引用","link":"#_4、构造器引用和项目引用","children":[]},{"level":3,"title":"5、Stream API","slug":"_5、stream-api","link":"#_5、stream-api","children":[]},{"level":3,"title":"6、Optional类","slug":"_6、optional类","link":"#_6、optional类","children":[]}]},{"level":2,"title":"JDK9,10,11 新特性","slug":"jdk9-10-11-新特性","link":"#jdk9-10-11-新特性","children":[]}],"readingTime":{"minutes":16.26,"words":4879},"filePathRelative":"code/java/Java 基础/语法基础/18、新特性.md","excerpt":"<h2> Java8新特性</h2>\\n<h3> 1、Lambda表达式</h3>\\n<p>1、举例：<code>(o1,o2) -&gt; Integer.compare(o1,o2);</code></p>\\n<p>2、格式：</p>\\n<p><code>接口名 对象名 = lambda形参列表 -&gt; lambda体</code></p>\\n<ul>\\n<li>箭头左边：lambda形参列表（<code>接口中的抽象方法的形参列表</code>）</li>\\n<li>箭头右边：lambda体：（<code>重写的抽象方法的方法体</code>）</li>\\n</ul>\\n<p>3、Lambda表达式的使用（分为六种情况介绍）</p>","autoDesc":true}');export{a as data};
