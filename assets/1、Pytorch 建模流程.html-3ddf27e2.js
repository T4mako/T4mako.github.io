import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as i,c as l,b as a,f as e,e as n,d as t}from"./app-acaf911b.js";const c={},d=a("h1",{id:"_1、pytorch-建模流程",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1、pytorch-建模流程","aria-hidden":"true"},"#"),e(" 1、Pytorch 建模流程")],-1),p=a("h2",{id:"pytorch-下载",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#pytorch-下载","aria-hidden":"true"},"#"),e(" Pytorch 下载")],-1),h=a("p",null,"创建新环境并下载 Pytorch",-1),u=t("<li><p>打开 Anaconda Prompt</p></li><li><p>使用指令 <code>conda create -n evn_name python=3.6 </code> 创建环境</p></li><li><p>使用指令 <code>conda activate evn_name</code> 切换环境</p></li><li><p>通过 <code>pip list</code> 查看环境的所有包</p></li>",4),_={href:"https://pytorch.org/",target:"_blank",rel:"noopener noreferrer"},g=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda <span class="token function">install</span> pytorch torchvision torchaudio pytorch-cuda<span class="token operator">=</span><span class="token number">11.8</span> <span class="token parameter variable">-c</span> pytorch <span class="token parameter variable">-c</span> nvidia
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),b={href:"https://anaconda.org/anaconda/jupyter",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda <span class="token function">install</span> anaconda::jupyter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="torchvision-模块" tabindex="-1"><a class="header-anchor" href="#torchvision-模块" aria-hidden="true">#</a> Torchvision 模块</h2>`,2),v={href:"https://pytorch.org/vision/stable/index.html",target:"_blank",rel:"noopener noreferrer"},f=t('<ul><li>datasets 模块封装了常用的数据集</li><li>models 模块封装了经典网络的模块</li><li>transforms 模块封装了图像的预处理操作</li></ul><h2 id="pytorch-建模流程" tabindex="-1"><a class="header-anchor" href="#pytorch-建模流程" aria-hidden="true">#</a> Pytorch 建模流程</h2><ol><li><p>准备数据</p></li><li><p>定义模型</p></li><li><p>训练模型</p></li><li><p>评估模型</p></li><li><p>使用模型</p></li><li><p>保存模型</p></li></ol><h3 id="_1-1、结构化数据建模流程" tabindex="-1"><a class="header-anchor" href="#_1-1、结构化数据建模流程" aria-hidden="true">#</a> 1.1、结构化数据建模流程</h3><ul><li><p>准备数据、数据预处理</p><p>结构化数据一般会使用 Pandas 中的 <strong>DataFrame</strong> 进行预处理</p><ul><li>使用 pandas 的函数对字符串的列做 <strong>独热编码</strong></li><li>对数值较大的列做 <strong>标准化</strong></li></ul></li><li><p>定义模型</p><p>定义模型时：</p><ul><li><strong>列数</strong> 为输入的 <strong>特征</strong> 个数 x</li><li>将输入 <strong>特征数 a</strong> 转换为 <strong>b 个隐层的特征</strong> 通常 <strong>乘以一个矩阵 w<sub>1</sub></strong> 并添加一个 <strong>大小为 b*1 偏置 b<sub>1</sub></strong> ，再加入一层激活函数</li></ul><p>对于 <strong>回归任务</strong>，输出为一个值，同样 <strong>w<sub>n</sub>，b<sub>n</sub> 的大小为 c*1，1*1</strong></p><p>对于 <strong>w</strong> 和 <strong>b</strong> 都是需要梯度的（<strong>requires_grad = True</strong>）</p></li><li><p>训练模型</p></li><li><p>评估模型</p><p>首先评估一下模型在训练集和验证集上的效果</p></li><li><p>使用模型</p></li><li><p>保存模型</p></li></ul><h3 id="_1-2、图片数据建模流程" tabindex="-1"><a class="header-anchor" href="#_1-2、图片数据建模流程" aria-hidden="true">#</a> 1.2、图片数据建模流程</h3><p>Pytorch 中构建图片数据管道通常有两种方法</p><ul><li>使用 torchvision 中的 datasets.ImageFolder 来读取图片然后用 DataLoader 来并行加载</li><li>通过继承 torch.utils.data.Dataset 实现用户自定义读取逻辑然后用 DataLoader 来并行加载 <ul><li>该方法是读取用户自定义数据集的通用方法，既可以读取图片数据集，也可以读取文本数据集</li></ul></li></ul><h3 id="_1-3、文本数据建模流程" tabindex="-1"><a class="header-anchor" href="#_1-3、文本数据建模流程" aria-hidden="true">#</a> 1.3、文本数据建模流程</h3><p>文本数据预处理较为繁琐，包括文本切词，构建词典，编码转换，序列填充，构建数据管道等等。</p><h3 id="_1-4、时间序列数据模型构建" tabindex="-1"><a class="header-anchor" href="#_1-4、时间序列数据模型构建" aria-hidden="true">#</a> 1.4、时间序列数据模型构建</h3><p>通过继承 torch.utils.data.Dataset 实现自定义时间序列数据集。</p><p>torch.utils.data.Dataset 是一个抽象类，用户想要加载自定义的数据只需要继承这个类，并且覆写其中的两个方法即可：</p><ul><li><code>__len__</code>: 实现 len(dataset) 返回整个数据集的大小。</li><li><code>__getitem__</code>: 用来获取一些索引的数据，使 <code>dataset[i]</code> 返回数据集中第i个样本。</li></ul><p>不覆写这两个方法会直接返回错误。</p>',15);function y(x,k){const r=s("ExternalLinkIcon");return i(),l("div",null,[d,p,h,a("ul",null,[u,a("li",null,[a("p",null,[e("查看 Pytoch 安装指令 "),a("a",_,[e("https://pytorch.org/"),n(r)])]),g])]),a("p",null,[e("在新环境下下载 Jupyter "),a("a",b,[e("https://anaconda.org/anaconda/jupyter"),n(r)])]),m,a("p",null,[a("a",v,[e("torchvision"),n(r)]),e(" 模块")]),f])}const L=o(c,[["render",y],["__file","1、Pytorch 建模流程.html.vue"]]);export{L as default};
