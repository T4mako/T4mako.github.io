import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as l,c as J,b as a,d as e,e as n,f as r}from"./app-b75a4e56.js";const c={},d=r('<h1 id="jvm-相关知识点汇总" tabindex="-1"><a class="header-anchor" href="#jvm-相关知识点汇总" aria-hidden="true">#</a> JVM 相关知识点汇总</h1><h2 id="_1、jvm-vs-jdk-vs-jre" tabindex="-1"><a class="header-anchor" href="#_1、jvm-vs-jdk-vs-jre" aria-hidden="true">#</a> 1、JVM vs JDK vs JRE</h2><h3 id="_1、jvm-概述" tabindex="-1"><a class="header-anchor" href="#_1、jvm-概述" aria-hidden="true">#</a> 1、JVM 概述</h3><p>Java 虚拟机（JVM）是运行 Java 字节码的虚拟机。</p><p>JVM 有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。</p><p>字节码和不同系统的 JVM 实现是 Java 语言“一次编译，随处可以运行”的关键所在。</p><p><strong>JVM 并不是只有一种！只要满足 JVM 规范，每个公司、组织或者个人都可以开发自己的专属 JVM。</strong><br> 也就是说我们平时接触到的 HotSpot VM（Sun/Oracle JDK 和 OpenJDK 中所带的虚拟机） 仅仅是是 JVM 规范的一种实现而已</p>',7),v=a("br",null,null,-1),p={href:"https://www.cnblogs.com/shoufeng/p/9719995.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://en.wikipedia.org/wiki/Comparison_of_Java_virtual_machines",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.oracle.com/javase/specs/index.html",target:"_blank",rel:"noopener noreferrer"},_=r('<h3 id="_2、jdk-和-jre" tabindex="-1"><a class="header-anchor" href="#_2、jdk-和-jre" aria-hidden="true">#</a> 2、JDK 和 JRE</h3><ul><li>JDK（Java Development Kit）= JRE + 开发工具集（javac.exe,java..exe,javadoc.exe...）</li><li>JRE（Java Runtime Environment Java运行环境）= JVM + Java SE 标准类库（Java Class Library）</li></ul><p>JDK（Java Development Kit），它是功能齐全的 Java SDK（软件开发套件 Software development kit），是提供给开发者使用的，能够创建和编译 Java 程序。</p><p>它包含了 JRE，同时还包含了编译 java 源码的编译器 javac 以及一些其他工具比如 javadoc（文档注释工具）、jdb（调试器）、jconsole（基于 JMX 的可视化监控⼯具）、javap（反编译工具）等等。</p><p>JRE（Java Runtime Environment） 是 Java 运行时环境。它是运行已编译 Java 程序所需的所有内容的集合，主要包括 Java 虚拟机（JVM）、Java 基础类库（Class Library）。</p><p>JRE 是 Java 运行时环境，仅包含 Java 应用程序的运行时环境和必要的类库。</p><p>JDK 则包含了 JRE，同时还包括了 javac、javadoc、jdb、jconsole、javap 等工具，可以用于 Java 应用程序的开发和调试。</p><p>如果需要进行 Java 编程工作，比如编写和编译 Java 程序、使用 Java API 文档等，就需要安装 JDK。<br> 而对于某些需要使用 Java 特性的应用程序，如 JSP 转换为 Java Servlet、使用反射等，也需要 JDK 来编译和运行 Java 代码。<br> 因此，即使不打算进行 Java 应用程序的开发工作，也有可能需要安装 JDK。</p><h3 id="_3、字节码" tabindex="-1"><a class="header-anchor" href="#_3、字节码" aria-hidden="true">#</a> 3、字节码</h3><p>在 Java 中，JVM 可以理解的代码就叫做字节码（即扩展名为 <code>.class</code> 的文件），它不面向任何特定的处理器，只面向虚拟机。</p><p>Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以， Java 程序运行时相对来说还是高效的（不过，和 C++，Rust，Go 等语言还是有一定差距的），而且，由于字节码并不针对一种特定的机器，因此，Java 程序无须重新编译便可在多种不同操作系统的计算机上运行。</p>',11),u=a("p",null,[a("code",null,".class->机器码"),e(" 这一步。在这一步 JVM 类加载器首先加载字节码文件，然后通过解释器逐行解释执行，这种方式的执行速度会相对比较慢。")],-1),f=a("p",null,"而且，有些方法和代码块是经常需要被调用的(也就是所谓的热点代码)，所以后面引进了 JIT（just-in-time compilation） 编译器，而 JIT 属于运行时编译。当 JIT 编译器完成第一次编译后，其会将字节码对应的机器码保存下来，下次可以直接使用。",-1),j=a("p",null,"而我们知道，机器码的运行效率肯定是高于 Java 解释器的。这也解释了我们为什么经常会说 Java 是编译与解释共存的语言",-1),S=a("div",{class:"hint-container info"},[a("p",{class:"hint-container-title"},"相关信息"),a("p",null,[e("HotSpot 采用了惰性评估(Lazy Evaluation)的做法，根据二八定律，消耗大部分系统资源的只有那一小部分的代码（"),a("strong",null,"热点代码"),e("），而这也就是 JIT 所需要编译的部分。")]),a("p",null,"JVM 会根据代码每次被执行的情况收集信息并相应地做出一些优化，因此执行的次数越多，它的速度就越快。"),a("p",null,"JDK 9 引入了一种新的编译模式 AOT(Ahead of Time Compilation)，它是直接将字节码编译成机器码，这样就避免了 JIT 预热等各方面的开销。JDK 支持分层编译和 AOT 协作使用。")],-1),V=a("p",null,"JVM 大致结构模型：",-1),k=a("p",null,[a("img",{src:"https://raw.githubusercontent.com/T4mako/ImageBed/main/image-20230821005244740.png",alt:"image-20230821005244740",loading:"lazy"})],-1);function K(g,D){const o=i("ExternalLinkIcon"),t=i("Mermaid");return l(),J("div",null,[d,a("blockquote",null,[a("p",null,[e("Oracle JDK 是基于 OpenJDK 源代码构建的"),v,e(" 关于 Oracle JDK 与 OpenJDK "),a("a",p,[e("https://www.cnblogs.com/shoufeng/p/9719995.html"),n(o)])]),a("p",null,[e("维基百科上就有常见 JVM 的对比："),a("a",h,[e("Comparison of Java virtual machinesopen in new window"),n(o)]),e(" ，感兴趣的可以去看看。并且，你可以在 "),a("a",m,[e("Java SE Specificationsopen in new window"),n(o)]),e(" 上找到各个版本的 JDK 对应的 JVM 规范。")])]),_,n(t,{id:"mermaid-71",code:"eJzT1dXlKsksyUm1UvBKLEtUeL6i++mu/ie7+57tmvBk9+LnCxqfdmx4sX/Ci4U9z2e1vNjfDlTABdKUlpNfnpyRWFSi4BPEpQAEmSnRSnpZIDOeTWt/snubUqyCrq6CEkgkWeH5nmkv1k9UAorYKTgB1SXnJBYXwxWC1L1Yvvhle9fTmSvUvDxDIAqdo5WezdkFFHrav/75hDagCqATII5SiuUCAMSjV4o="}),u,f,j,n(t,{id:"mermaid-81",code:"eJxLy8kvT85ILCpR8AniUgACx2glvazEskSFZ9Pan+zephSroKuroAQSSVZ4vmfai/UTlYAidgpOQHXJOYnFxXCFIFHnaqVnM9Y/nbDsyY5dz5vXPm/a+WT34ucLGt/vma9UCzbfGWRepGsw2BAFl2glL88QsCV2Cm7RSs/m7Ho6c8XT/vXPJ7S9WL74+awWiH6lWIRmP3+IXtdoJaCSl+1dQB0wE7i4ANsSVMU="}),S,n(t,{id:"mermaid-93",code:"eJzT1dXlKsksyUm1UvBy8X7c0OgV5Aoiw3xBpGeIwtPZs180tD5t3fx8824ukOq0nPzy5IzEohIFnyAuheLSpPSixIIMkG4uBSBACAS5ggVQBcN84YKoEp4hKBKpeSlwPowNokEYADdBNtk="}),V,k])}const w=s(c,[["render",K],["__file","JVM.html.vue"]]);export{w as default};
