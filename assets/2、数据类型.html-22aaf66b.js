import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as o,e as p,f as n}from"./app-67f2e4c2.js";const l={},r=n(`<h2 id="基本数据类型" tabindex="-1"><a class="header-anchor" href="#基本数据类型" aria-hidden="true">#</a> 基本数据类型</h2><p>变量必须 <strong>先声明后使用</strong>，在相应作用域有效</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//变量的声明</span>
<span class="token keyword">int</span> num<span class="token punctuation">;</span>
<span class="token comment">//定义未赋值，是不确定值，不可用于输出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>变量按数据类型分：</p>`,4),c=n(`<h3 id="整数类型" tabindex="-1"><a class="header-anchor" href="#整数类型" aria-hidden="true">#</a> 整数类型</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">占用存储空间</th><th style="text-align:center;">表示范围</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>byte</strong></td><td style="text-align:center;">1B</td><td style="text-align:center;">-128-127</td></tr><tr><td style="text-align:center;"><strong>short</strong></td><td style="text-align:center;">2B</td><td style="text-align:center;">-2<sup>15</sup>-2<sup>15</sup>-1</td></tr><tr><td style="text-align:center;"><strong>int</strong></td><td style="text-align:center;">4B</td><td style="text-align:center;">-2<sup>31</sup>-2<sup>31</sup>-1</td></tr><tr><td style="text-align:center;"><strong>long</strong></td><td style="text-align:center;">8B</td><td style="text-align:center;">-2<sup>63</sup>-2<sup>63</sup>-1</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">byte</span> s1 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">;</span>
<span class="token comment">//byte s2 = 128; //编译不通过</span>
<span class="token keyword">short</span> s3 <span class="token operator">=</span> <span class="token number">66</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> s4 <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> s5 <span class="token operator">=</span> <span class="token number">987654321L</span> <span class="token comment">//声明 long 型变量必须以 L 或 l结尾(不带 L 默认为 int 转 long，如果数字超出 int 范围，必须带 L)</span>
<span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token number">1e1f</span><span class="token punctuation">;</span>  <span class="token comment">// 10.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>带 e、E 的如 <code>1e2</code>、<code>2.3E5</code>、<code>.2e3</code> 都是 double 类型的常量，e/E 前后都要带数字</p></div><h3 id="浮点型" tabindex="-1"><a class="header-anchor" href="#浮点型" aria-hidden="true">#</a> 浮点型</h3><table><thead><tr><th>类型</th><th>占存储空间</th><th>表示范围</th></tr></thead><tbody><tr><td><strong>单精度float</strong></td><td>4B</td><td>-3.403E38-3.403E38</td></tr><tr><td><strong>双精度double</strong></td><td>8B</td><td>-1.798E308-1.798E308</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">112</span><span class="token punctuation">;</span> <span class="token comment">// int 自动转 float</span>
<span class="token keyword">float</span> x <span class="token operator">=</span> <span class="token number">0x123</span><span class="token punctuation">;</span>
<span class="token keyword">float</span> f1 <span class="token operator">=</span> <span class="token number">12.3F</span><span class="token punctuation">;</span><span class="token comment">//定义 float 类型的含小数变量时，变量要以 f或 F 结尾（必须）</span>
<span class="token keyword">double</span> d2 <span class="token operator">=</span> <span class="token number">12.3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符型" tabindex="-1"><a class="header-anchor" href="#字符型" aria-hidden="true">#</a> 字符型</h3><p>字符型 char ，使用 &#39;&#39; 两个单引号，内部必须且只能有一个字符或在 0 ~ 65535 的数字，等于两个字节<br> 两个 char 类型相加是 int 类型</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">char</span> a <span class="token operator">=</span> <span class="token number">65535</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> b <span class="token operator">=</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token char">&#39;啊&#39;</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token char">&#39;你&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 20320</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boolean-类型" tabindex="-1"><a class="header-anchor" href="#boolean-类型" aria-hidden="true">#</a> boolean 类型</h3><p>boolean只有 <code>true</code> 和 <code>false</code> 两个值</p><h2 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换" aria-hidden="true">#</a> 类型转换</h2><h3 id="自动类型提升" tabindex="-1"><a class="header-anchor" href="#自动类型提升" aria-hidden="true">#</a> 自动类型提升</h3><p><strong>byte、char、short → int → long → float → double</strong></p><p>往容量大的提升（表示数的范围的大小）</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>byte、char、short 三种类型的变量做运算时（无论是相同类型还是不同类型），结果为 int 型</p></div><h3 id="强制类型转换" tabindex="-1"><a class="header-anchor" href="#强制类型转换" aria-hidden="true">#</a> 强制类型转换</h3><p>自动类型提升的逆运算</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">double</span> d1 <span class="token operator">=</span> <span class="token number">12.9</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>d1<span class="token punctuation">;</span> <span class="token comment">//12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>整形常量，默认为 int 型，浮点型常量，默认为 double 型</p></div><h2 id="string-类型" tabindex="-1"><a class="header-anchor" href="#string-类型" aria-hidden="true">#</a> String 类型</h2><p>String 属于引用数据类型，声明时使用一对 「&quot;&quot;」</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> s2 <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//char c1 = &#39;&#39;;//编译不通过</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>String 可以和8种基本数据类型变量做运算，且运算只能时连接运算+，运算的结果任然是 String 类型</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token number">12346</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token string">&quot;学号&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> si <span class="token operator">=</span> s1 <span class="token operator">+</span> i1<span class="token punctuation">;</span>

<span class="token class-name">String</span> s2 <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//int num = (int)s2; // 编译不通过，语法错误！</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="var-类型" tabindex="-1"><a class="header-anchor" href="#var-类型" aria-hidden="true">#</a> var 类型</h2><p>JDK 10 版本开始，增加了「局部变量类型推断」。即可以使用 var 声明「局部变量」，不能用 var 声明 全局变量</p><ul><li>var 声明局部变量时，必须指定初值（不能是 null），编译器推断出 var 变量类型</li><li>方法的参数和返回类型不能使用 var</li><li>var 不是动态变量（运行时确定），其在编译阶段就确定了类型</li></ul>`,29);function i(d,u){const a=e("Mermaid");return t(),o("div",null,[r,p(a,{id:"mermaid-10",code:"eJzjSsvJL0/OSCwqUfAJ4lIAAsdopWdTNzzrXfd84+6n87qVYhV0de0UnKKVns7f9WzOGmS593s6CooyczNLMstSFUoqC1Lf7+mEqncGm/K0YQ/CCBeQ0BagKEzzrKTKktTHDY3FGflFJUA6Mw9E5uTnpSvFgp3iDNbnCtS3dd3zpp1wfUA3J4KUpuSXJuWkQhU7gRW7Ad25dvrzNcsgKkE+Q5H3BMrvaH66YQrUBfn5OamJeVAljmAlXkAle6Y+n7ICzatFqWmpRal5yXCvgszPSSwuBso97Wl91r0GYvOTHZuAkhD/pBalJSaD/Ajy9u4WoD0Ava6ztg=="}),c])}const h=s(l,[["render",i],["__file","2、数据类型.html.vue"]]);export{h as default};
