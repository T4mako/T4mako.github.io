import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,f as e}from"./app-b75a4e56.js";const t={},o=e(`<h2 id="基本数据类型" tabindex="-1"><a class="header-anchor" href="#基本数据类型" aria-hidden="true">#</a> 基本数据类型</h2><p>变量必须先声明后使用，在相应作用域有效</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//变量的声明</span>
<span class="token keyword">int</span> myNumber<span class="token punctuation">;</span>
<span class="token comment">//定义未赋值，是不确定值，不可用于输出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>变量按数据类型分：<br><img src="https://raw.githubusercontent.com/T4mako/ImageBed/main/image-20230201180613862.png" alt="image-20230201180613862" loading="lazy"></p><h3 id="整数类型" tabindex="-1"><a class="header-anchor" href="#整数类型" aria-hidden="true">#</a> 整数类型</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">占用存储空间</th><th style="text-align:center;">表示范围</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>byte</strong></td><td style="text-align:center;">1B</td><td style="text-align:center;">-128-127</td></tr><tr><td style="text-align:center;"><strong>short</strong></td><td style="text-align:center;">2B</td><td style="text-align:center;">-2<sup>15</sup>-2<sup>15</sup>-1</td></tr><tr><td style="text-align:center;"><strong>int</strong></td><td style="text-align:center;">4B</td><td style="text-align:center;">-2<sup>31</sup>-2<sup>31</sup>-1</td></tr><tr><td style="text-align:center;"><strong>long</strong></td><td style="text-align:center;">8B</td><td style="text-align:center;">-2<sup>63</sup>-2<sup>63</sup>-1</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">byte</span> s1 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">;</span>
<span class="token comment">//byte s2 = 128; //编译不通过</span>
<span class="token keyword">short</span> s3 <span class="token operator">=</span> <span class="token number">66</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> s4 <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> s5 <span class="token operator">=</span> <span class="token number">987654321L</span> <span class="token comment">//声明long型变量必须以“L”或“l”结尾(不带L默认为int转long，如果数字超出int范围，必须带L)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="浮点型" tabindex="-1"><a class="header-anchor" href="#浮点型" aria-hidden="true">#</a> 浮点型</h3><table><thead><tr><th>类型</th><th>占存储空间</th><th>表示范围</th></tr></thead><tbody><tr><td><strong>单精度float</strong></td><td>4B</td><td>-3.403E38-3.403E38</td></tr><tr><td><strong>双精度double</strong></td><td>8B</td><td>-1.798E308-1.798E308</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">float</span> f1 <span class="token operator">=</span> <span class="token number">12.3F</span><span class="token punctuation">;</span><span class="token comment">//定义float类型的变量时，变量要以“f”或“F”结尾(必须)</span>
<span class="token keyword">double</span> d2 <span class="token operator">=</span> <span class="token number">12.3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符型" tabindex="-1"><a class="header-anchor" href="#字符型" aria-hidden="true">#</a> 字符型</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">char</span> a <span class="token operator">=</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">;</span>
<span class="token comment">//字符型char，使用&#39;&#39;两个单引号，内部必须且只能有一个字符,等于两个字节</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boolean类型" tabindex="-1"><a class="header-anchor" href="#boolean类型" aria-hidden="true">#</a> boolean类型</h3><p><strong>boolean只有<code>true</code>和<code>false</code>两个值</strong></p><h2 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换" aria-hidden="true">#</a> 类型转换</h2><h3 id="自动类型提升" tabindex="-1"><a class="header-anchor" href="#自动类型提升" aria-hidden="true">#</a> 自动类型提升</h3><p><strong>byte、char、short→int→long→float→double</strong></p><p>往容量大的提升（表示数的范围的大小）</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>byte、char、short三种类型的变量做运算时，结果为int型</p></div><h3 id="强制类型转换" tabindex="-1"><a class="header-anchor" href="#强制类型转换" aria-hidden="true">#</a> 强制类型转换</h3><p>自动类型提升的逆运算</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">double</span> d1 <span class="token operator">=</span> <span class="token number">12.9</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>d1<span class="token punctuation">;</span> <span class="token comment">//12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>整形常量，默认为int型，浮点型常量，默认为double型</p></div><h2 id="string类型" tabindex="-1"><a class="header-anchor" href="#string类型" aria-hidden="true">#</a> String类型</h2><p>String属于引用数据类型，声明时使用一对&quot;&quot;</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> s2 <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//char c1 = &#39;&#39;;//编译不通过</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>String可以和8种基本数据类型变量做运算，且运算只能时连接运算+，运算的结果任然时String类型</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token number">12346</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token string">&quot;学号&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> si <span class="token operator">=</span> s1 <span class="token operator">+</span> i1<span class="token punctuation">;</span>

<span class="token class-name">String</span> s2 <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//int num = (int)s2; //编译不通过，语法错误！</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),r=[o];function i(l,d){return n(),s("div",null,r)}const u=a(t,[["render",i],["__file","2、数据类型.html.vue"]]);export{u as default};
