const a=JSON.parse('{"key":"v-5fa28068","path":"/code/java/Java%20%E5%9F%BA%E7%A1%80/%E5%B8%B8%E7%94%A8%E7%B1%BB/Pattern%20%E4%B8%8E%20Matcher%20%E7%B1%BB.html","title":"Pattern 与 Matcher 类","lang":"zh-CN","frontmatter":{"icon":"java","category":["java"],"tag":["基础语法","java"],"title":"Pattern 与 Matcher 类","description":"java.util.regex 包提供了 Patter 类与 Matcher 类用于模式匹配 Pattern 对象与 Matcher 对象的创建： Srring input = \\"待匹配字符\\" String regex = \\"\\\\\\\\w+@\\\\\\\\w+\\\\\\\\.[a-z]+(\\\\\\\\.[a-z]+)?\\" // 创建邮箱验证正则表达式 Pattern pattern = Pattern.compile(regex); // 创建 pattern 对象 Matcher matcher = pattern.matcher(input); // 创建 matcher 对象","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/java/Java%20%E5%9F%BA%E7%A1%80/%E5%B8%B8%E7%94%A8%E7%B1%BB/Pattern%20%E4%B8%8E%20Matcher%20%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"Pattern 与 Matcher 类"}],["meta",{"property":"og:description","content":"java.util.regex 包提供了 Patter 类与 Matcher 类用于模式匹配 Pattern 对象与 Matcher 对象的创建： Srring input = \\"待匹配字符\\" String regex = \\"\\\\\\\\w+@\\\\\\\\w+\\\\\\\\.[a-z]+(\\\\\\\\.[a-z]+)?\\" // 创建邮箱验证正则表达式 Pattern pattern = Pattern.compile(regex); // 创建 pattern 对象 Matcher matcher = pattern.matcher(input); // 创建 matcher 对象"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"基础语法"}],["meta",{"property":"article:tag","content":"java"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pattern 与 Matcher 类\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Pattern 对象与 Matcher 对象的创建：","slug":"pattern-对象与-matcher-对象的创建","link":"#pattern-对象与-matcher-对象的创建","children":[]},{"level":2,"title":"matcher 对象的方法：","slug":"matcher-对象的方法","link":"#matcher-对象的方法","children":[]},{"level":2,"title":"实例","slug":"实例","link":"#实例","children":[]}],"readingTime":{"minutes":0.93,"words":278},"filePathRelative":"code/java/Java 基础/常用类/Pattern 与 Matcher 类.md","excerpt":"<p>java.util.regex 包提供了 Patter 类与 Matcher 类用于模式匹配</p>\\n<h2> Pattern 对象与 Matcher 对象的创建：</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">Srring</span> input <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"待匹配字符\\"</span>\\n<span class=\\"token class-name\\">String</span> regex <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\\\\\\\w+@\\\\\\\\w+\\\\\\\\.[a-z]+(\\\\\\\\.[a-z]+)?\\"</span> <span class=\\"token comment\\">// 创建邮箱验证正则表达式</span>\\n<span class=\\"token class-name\\">Pattern</span> pattern <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Pattern</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">compile</span><span class=\\"token punctuation\\">(</span>regex<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 创建 pattern 对象</span>\\n<span class=\\"token class-name\\">Matcher</span> matcher <span class=\\"token operator\\">=</span> pattern<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">matcher</span><span class=\\"token punctuation\\">(</span>input<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 创建 matcher 对象</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{a as data};
