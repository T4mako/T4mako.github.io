const e=JSON.parse('{"key":"v-c526ebcc","path":"/code/java/Maven%E5%9F%BA%E7%A1%80.html","title":"Maven 基础","lang":"zh-CN","frontmatter":{"title":"Maven 基础","icon":"categoryselected","order":7,"category":["java"],"tag":["java","包管理工具"],"description":"1、Maven概述 1、为什么要学习Maven？ 1、Maven 作为依赖管理工具 ①jar 包的规模 随着我们使用越来越多的框架，或者框架封装程度越来越高，项目中使用的jar包也越来越多。项目中，一个模块里面用到上百个jar包是非常正常的。","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/java/Maven%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"Maven 基础"}],["meta",{"property":"og:description","content":"1、Maven概述 1、为什么要学习Maven？ 1、Maven 作为依赖管理工具 ①jar 包的规模 随着我们使用越来越多的框架，或者框架封装程度越来越高，项目中使用的jar包也越来越多。项目中，一个模块里面用到上百个jar包是非常正常的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"包管理工具"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Maven 基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、Maven概述","slug":"_1、maven概述","link":"#_1、maven概述","children":[{"level":3,"title":"1、为什么要学习Maven？","slug":"_1、为什么要学习maven","link":"#_1、为什么要学习maven","children":[]},{"level":3,"title":"2、什么是 Maven？","slug":"_2、什么是-maven","link":"#_2、什么是-maven","children":[]}]},{"level":2,"title":"2、Maven 核心程序解压和配置","slug":"_2、maven-核心程序解压和配置","link":"#_2、maven-核心程序解压和配置","children":[{"level":3,"title":"1、Maven核心程序解压与配置","slug":"_1、maven核心程序解压与配置","link":"#_1、maven核心程序解压与配置","children":[]},{"level":3,"title":"2、配置环境变量","slug":"_2、配置环境变量","link":"#_2、配置环境变量","children":[]}]},{"level":2,"title":"3、使用 Maven：命令行环境","slug":"_3、使用-maven-命令行环境","link":"#_3、使用-maven-命令行环境","children":[{"level":3,"title":"1、根据坐标创建 Maven 工程","slug":"_1、根据坐标创建-maven-工程","link":"#_1、根据坐标创建-maven-工程","children":[]},{"level":3,"title":"2、在 Maven 工程中编写代码","slug":"_2、在-maven-工程中编写代码","link":"#_2、在-maven-工程中编写代码","children":[]},{"level":3,"title":"3、执行 Maven 的构建命令","slug":"_3、执行-maven-的构建命令","link":"#_3、执行-maven-的构建命令","children":[]},{"level":3,"title":"4、创建 Maven 版的 Web 工程","slug":"_4、创建-maven-版的-web-工程","link":"#_4、创建-maven-版的-web-工程","children":[]},{"level":3,"title":"5、让 Web 工程依赖 Java 工程","slug":"_5、让-web-工程依赖-java-工程","link":"#_5、让-web-工程依赖-java-工程","children":[]},{"level":3,"title":"6、测试依赖的范围","slug":"_6、测试依赖的范围","link":"#_6、测试依赖的范围","children":[]},{"level":3,"title":"7、测试依赖的传递性","slug":"_7、测试依赖的传递性","link":"#_7、测试依赖的传递性","children":[]},{"level":3,"title":"8、测试依赖的排除","slug":"_8、测试依赖的排除","link":"#_8、测试依赖的排除","children":[]},{"level":3,"title":"9、继承","slug":"_9、继承","link":"#_9、继承","children":[]},{"level":3,"title":"10、聚合","slug":"_10、聚合","link":"#_10、聚合","children":[]}]},{"level":2,"title":"4、使用Maven：IDEA环境","slug":"_4、使用maven-idea环境","link":"#_4、使用maven-idea环境","children":[{"level":3,"title":"1、创建父工程","slug":"_1、创建父工程","link":"#_1、创建父工程","children":[]},{"level":3,"title":"2、配置自己的Maven","slug":"_2、配置自己的maven","link":"#_2、配置自己的maven","children":[]},{"level":3,"title":"3 、建Java模块工程","slug":"_3-、建java模块工程","link":"#_3-、建java模块工程","children":[]},{"level":3,"title":"4、创建Web模块工程","slug":"_4、创建web模块工程","link":"#_4、创建web模块工程","children":[]},{"level":3,"title":"5、其他操作","slug":"_5、其他操作","link":"#_5、其他操作","children":[]}]},{"level":2,"title":"5、其他核心概念","slug":"_5、其他核心概念","link":"#_5、其他核心概念","children":[{"level":3,"title":"1、生命周期","slug":"_1、生命周期","link":"#_1、生命周期","children":[]},{"level":3,"title":"2、插件和目标","slug":"_2、插件和目标","link":"#_2、插件和目标","children":[]},{"level":3,"title":"3、仓库","slug":"_3、仓库","link":"#_3、仓库","children":[]}]}],"readingTime":{"minutes":29.57,"words":8872},"filePathRelative":"code/java/Maven基础.md","excerpt":"<h2> 1、Maven概述</h2>\\n<h3> 1、为什么要学习Maven？</h3>\\n<h4> 1、Maven 作为依赖管理工具</h4>\\n<h5> ①jar 包的规模</h5>\\n<p>随着我们使用越来越多的框架，或者框架封装程度越来越高，项目中使用的jar包也越来越多。项目中，一个模块里面用到上百个jar包是非常正常的。</p>\\n","autoDesc":true}');export{e as data};
