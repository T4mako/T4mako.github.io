import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,a as n,b as s,d as l,e as a}from"./app-7ce3f657.js";const i={},u=n("h1",{id:"_026-删除有序数组中的重复项",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_026-删除有序数组中的重复项","aria-hidden":"true"},"#"),s(" 026_删除有序数组中的重复项")],-1),r=n("blockquote",null,[n("p",null,"tag：数组、双指针"),n("p",null,"难度：简单")],-1),d=a("<p>题目：</p><p>给你一个 升序排列 的数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新长度。元素的 相对顺序 应该保持 一致 。然后返回 nums 中唯一元素的个数。</p><p>考虑 nums 的唯一元素的数量为 k ，你需要做以下事情确保你的题解可以被通过：</p><p>更改数组 nums ，使 nums 的前 k 个元素包含唯一元素，并按照它们最初在 nums 中出现的顺序排列。nums 的其余元素与 nums 的大小不重要。<br> 返回 k 。<br> 判题标准:</p><p>系统会用下面的代码来测试你的题解:</p><p>int[] nums = [...]; // 输入数组<br> int[] expectedNums = [...]; // 长度正确的期望答案</p><p>int k = removeDuplicates(nums); // 调用</p><p>assert k == expectedNums.length;<br> for (int i = 0; i &lt; k; i++) {<br> assert nums[i] == expectedNums[i];<br> }<br> 如果所有断言都通过，那么您的题解将被 通过。</p>",8),k=n("br",null,null,-1),m={href:"https://leetcode.cn/problems/remove-duplicates-from-sorted-array",target:"_blank",rel:"noopener noreferrer"},_=n("br",null,null,-1),v=a(`<h2 id="解法" tabindex="-1"><a class="header-anchor" href="#解法" aria-hidden="true">#</a> 解法：</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">removeDuplicates</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>right <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>right <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                right<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                nums<span class="token punctuation">[</span><span class="token operator">++</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>right<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                res<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运用双指针，左边指向不重复的数，right往右移动指针，如果有重复的就right++；如果没重复nums[++left] = nums[right++];定义一个res用于返回</p>`,3);function b(h,f){const e=p("ExternalLinkIcon");return o(),c("div",null,[u,r,n("blockquote",null,[d,n("p",null,[s("来源：力扣（LeetCode）"),k,s(" 链接："),n("a",m,[s("https://leetcode.cn/problems/remove-duplicates-from-sorted-array"),l(e)]),_,s(" 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。")])]),v])}const y=t(i,[["render",b],["__file","leetcode_026_删除有序数组中的重复项.html.vue"]]);export{y as default};
