import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,b as s,d as n,e as t,f as p}from"./app-e3dfebc7.js";const i={},u={href:"https://www.mongodb.com/",target:"_blank",rel:"noopener noreferrer"},r=s("strong",null,"分布式文件存储",-1),d=p('<h2 id="_1、介绍" tabindex="-1"><a class="header-anchor" href="#_1、介绍" aria-hidden="true">#</a> 1、介绍</h2><h3 id="_1-1、概念" tabindex="-1"><a class="header-anchor" href="#_1-1、概念" aria-hidden="true">#</a> 1.1、概念</h3><p>Mongodb 中有三个重要概念：</p><p>数据库 -&gt; 集合(表) -&gt; 文档(行)</p><p>数据库（database）数据库服务可以创建很多数据库，<strong>数据库</strong>中存放很多<strong>集合</strong><br> 集合（collection） 集合类似于 <strong>JS 中的数组</strong>，在集合中可以<strong>存放</strong>很多<strong>文档</strong><br> 文档（document） <strong>文档</strong>是数据库中的<strong>最小单位</strong>，类似于 JS 中的<strong>对象</strong></p><p><img src="https://raw.githubusercontent.com/T4mako/ImageBed/main/20230429213859.png" alt="" loading="lazy"></p><h3 id="_1-2、下载" tabindex="-1"><a class="header-anchor" href="#_1-2、下载" aria-hidden="true">#</a> 1.2、下载</h3>',7),k={href:"https://www.mongodb.com/try/download/community",target:"_blank",rel:"noopener noreferrer"},v=p(`<p><img src="https://raw.githubusercontent.com/T4mako/ImageBed/main/20230429214304.png" alt="" loading="lazy"></p><p>将压缩包移动到 C:\\Program Files 下，解压<br> 创建 C:\\data\\db 目录，mongodb 会将数据<strong>默认保存</strong>在这个文件夹</p><h3 id="_1-3、启动服务" tabindex="-1"><a class="header-anchor" href="#_1-3、启动服务" aria-hidden="true">#</a> 1.3、启动服务</h3><p>以 mongodb 中 bin 目录作为工作目录，启动命令行<br> 运行命令 <strong>mongod</strong></p><p>看到最后的 waiting for connections 则表明服务 已经启动成功</p><p>可以使用 <strong>mongo</strong> 命令连接本机的 mongodb 服务</p><blockquote><p>注：<br> 为了方便后续方便使用 mongod 命令，可以将 bin 目录配置到环境变量 Path 中<br> 千万不要选中服务端窗口的内容 ，选中会停止服务，可以 敲回车 取消选中</p></blockquote><h2 id="_2、基础命令" tabindex="-1"><a class="header-anchor" href="#_2、基础命令" aria-hidden="true">#</a> 2、基础命令</h2><h3 id="_2-1、数据库" tabindex="-1"><a class="header-anchor" href="#_2-1、数据库" aria-hidden="true">#</a> 2.1、数据库</h3><p>显示所有数据库：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> dbs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>切换到指定的数据库（不存在自动创建）</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> 数据库名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示当前所在数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除当前数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> 库名
db<span class="token punctuation">.</span>dropDatabase<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2、集合" tabindex="-1"><a class="header-anchor" href="#_2-2、集合" aria-hidden="true">#</a> 2.2、集合</h3><p>创建集合</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>createCollection<span class="token punctuation">(</span><span class="token string">&#39;集合名称&#39;</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>createCollection<span class="token punctuation">(</span><span class="token string">&#39;books&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>显示当前数据库的所有集合</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> collections
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除某个集合</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token keyword">drop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token keyword">drop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>重命名集合</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span>renameCollection<span class="token punctuation">(</span><span class="token string">&#39;newName&#39;</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>books<span class="token punctuation">.</span>renameCollection<span class="token punctuation">(</span><span class="token string">&#39;movies&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3、文档" tabindex="-1"><a class="header-anchor" href="#_2-3、文档" aria-hidden="true">#</a> 2.3、文档</h3><p>插入文档</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token keyword">insert</span><span class="token punctuation">(</span>文档对象<span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token keyword">insert</span><span class="token punctuation">(</span>{name:<span class="token string">&#39;good book&#39;</span><span class="token punctuation">,</span>prive:<span class="token number">80</span>}<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查询文档</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span>find<span class="token punctuation">(</span>查询条件<span class="token punctuation">)</span>
db<span class="token punctuation">.</span>books<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#查询books集合中的全部</span>
db<span class="token punctuation">.</span>books<span class="token punctuation">.</span>find<span class="token punctuation">(</span>{price:<span class="token number">80</span>}<span class="token punctuation">)</span> <span class="token comment">#查询price字段为80的文档</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>_id</strong> 是 mongodb 自动生成的唯一编号，用来唯一标识文档</p><p>更新文档</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token keyword">update</span><span class="token punctuation">(</span>查询条件<span class="token punctuation">,</span>新的文档<span class="token punctuation">)</span>
db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token keyword">update</span><span class="token punctuation">(</span>{name:<span class="token string">&#39;A Book&#39;</span>}<span class="token punctuation">,</span>{price:<span class="token number">100</span>}<span class="token punctuation">)</span> <span class="token comment">#查询name为A Book的对象，用{price:100}对象代替（不合逻辑）</span>
db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token keyword">update</span><span class="token punctuation">(</span>{name:<span class="token string">&#39;A Book&#39;</span>}<span class="token punctuation">,</span>{$<span class="token keyword">set</span>:{price:<span class="token number">100</span>}}<span class="token punctuation">)</span> <span class="token comment">#查询name为A Book的对象,更新字段值（合逻辑）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除文档</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>查询条件<span class="token punctuation">)</span> 
db<span class="token punctuation">.</span>books<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>{name:<span class="token string">&#39;A Book&#39;</span>}<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、mongoose" tabindex="-1"><a class="header-anchor" href="#_3、mongoose" aria-hidden="true">#</a> 3、Mongoose</h2>`,37),m={href:"http://www.mongoosejs.net/",target:"_blank",rel:"noopener noreferrer"},b=s("br",null,null,-1),g=s("strong",null,"代码操作 mongodb",-1),h=p(`<p>安装：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i mongoose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-1、使用流程" tabindex="-1"><a class="header-anchor" href="#_3-1、使用流程" aria-hidden="true">#</a> 3.1、使用流程</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//1. 导入 mongoose</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//2. 连接数据库(ip,端口,数据库名（没有则自动创建）)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://127.0.0.1:27017/bilibili&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//3. 设置连接回调</span>
<span class="token comment">//连接成功（once即只连接一次）</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//4. 创建文档结构对象</span>
	<span class="token keyword">let</span> BookSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">title</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
		<span class="token literal-property property">author</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
		<span class="token literal-property property">price</span><span class="token operator">:</span> Number
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//5. 创建文档模型对象（对文档crud的对象）</span>
    <span class="token comment">// mongoose会使用集合的复数创建集合（books）</span>
	<span class="token keyword">let</span> BookModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;book&#39;</span><span class="token punctuation">,</span> BookSchema<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//集合名称，结构对象</span>
	<span class="token comment">//6. 插入文档</span>
	BookModel<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;西游记&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;吴承恩&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">19.9</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    	<span class="token comment">//输出 data 对象</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//7. 断开连接（一般不关）</span>
		mongoose<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//连接出错的回调</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接出错~~&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//连接关闭的回调</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接关闭&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2、字段类型" tabindex="-1"><a class="header-anchor" href="#_3-2、字段类型" aria-hidden="true">#</a> 3.2、字段类型</h3><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>字符串</td></tr><tr><td>Number</td><td>数字</td></tr><tr><td>Boolean</td><td>布尔值</td></tr><tr><td>Array</td><td>数组，也可以使用 [] 来标识</td></tr><tr><td>Date</td><td>日期</td></tr><tr><td>Buffer</td><td>Buffer 对象</td></tr><tr><td>Mixed</td><td>任意类型，需要使用 mongoose.Schema.Types.Mixed 指定</td></tr><tr><td>ObjectId</td><td>对象 ID，需要使用 mongoose.Schema.Types.ObjectId 指定</td></tr><tr><td>Decimal128</td><td>高精度数字，需要使用 mongoose.Schema.Types.Decimal128 指定</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> BookSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">author</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">price</span><span class="token operator">:</span> Number，
    <span class="token literal-property property">test</span><span class="token operator">:</span> mongoose<span class="token punctuation">.</span>Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>Mixed<span class="token punctuation">,</span>
    <span class="token literal-property property">test2</span><span class="token operator">:</span> mongoose<span class="token punctuation">.</span>Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ObjectId
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3、字段值验证" tabindex="-1"><a class="header-anchor" href="#_3-3、字段值验证" aria-hidden="true">#</a> 3.3、字段值验证</h3><p>Mongoose 内置了一些验证器，可以对字段值进行验证</p><p>① 必填</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 设置必填项</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>② 默认值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;匿名&#39;</span> <span class="token comment">//默认值</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>③ 枚举值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
	<span class="token keyword">enum</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">]</span> <span class="token comment">//设置的值必须是数组中的</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>④ 唯一值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
	<span class="token literal-property property">unique</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>举例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> BookSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//必须填</span>
        <span class="token literal-property property">unique</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//唯一</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    	<span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;匿名&#39;</span> <span class="token comment">//默认值</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
		<span class="token keyword">enum</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">]</span> <span class="token comment">//设置时必须是数组中的</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">price</span><span class="token operator">:</span> Number，
    <span class="token literal-property property">test</span><span class="token operator">:</span> mongoose<span class="token punctuation">.</span>Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>Mixed<span class="token punctuation">,</span>
    <span class="token literal-property property">test2</span><span class="token operator">:</span> mongoose<span class="token punctuation">.</span>Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ObjectId
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注：<br> unique 需要 重建集合 才能有效果 ，即不能在旧的集合中使用</p></blockquote><h3 id="_3-4、crud" tabindex="-1"><a class="header-anchor" href="#_3-4、crud" aria-hidden="true">#</a> 3.4、crud</h3><p>增加（create），删除（delete），修改（update），查（read）</p><h4 id="_3-4-1、插入" tabindex="-1"><a class="header-anchor" href="#_3-4-1、插入" aria-hidden="true">#</a> 3.4.1、插入</h4><p>插入一条：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">&#39;Song&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;Jay&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//错误</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//插入后的数据对象</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量插入：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//创建模型对象</span>
<span class="token keyword">const</span> PhoneModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;phone&#39;</span><span class="token punctuation">,</span>PhoneSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>

PhoneModel<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">brand</span><span class="token operator">:</span><span class="token string">&#39;华为&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">&#39;灰色&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">2399</span><span class="token punctuation">,</span>
        <span class="token literal-property property">tags</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;电量大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;屏幕大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;信号好&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">brand</span><span class="token operator">:</span><span class="token string">&#39;小米&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">&#39;白色&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">2099</span><span class="token punctuation">,</span>
        <span class="token literal-property property">tags</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;电量大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;屏幕大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;信号好&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;写入成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4-2、删除" tabindex="-1"><a class="header-anchor" href="#_3-4-2、删除" aria-hidden="true">#</a> 3.4.2、删除</h4><p>删除一条数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&#39;5dd65f32be6401035cb5b1ed&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;删除成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量删除</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span><span class="token string">&#39;Jay&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;删除成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4-3、更新" tabindex="-1"><a class="header-anchor" href="#_3-4-3、更新" aria-hidden="true">#</a> 3.4.3、更新</h4><p>更新一条数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//前面为条件，后面为数据，可以直接修改</span>
SongModel<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;JJ&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;林俊杰&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量更新数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;AA&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;BB&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4-4、查询" tabindex="-1"><a class="header-anchor" href="#_3-4-4、查询" aria-hidden="true">#</a> 3.4.4、查询</h4><p>查询一条数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//根据 id 查询数据</span>
SongModel<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token string">&#39;5dd662b5381fc316b44ce167&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量查询数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//不加条件查询</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//加条件查询</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5、运算符" tabindex="-1"><a class="header-anchor" href="#_3-5、运算符" aria-hidden="true">#</a> 3.5、运算符</h3><h4 id="_3-5-1、条件运算" tabindex="-1"><a class="header-anchor" href="#_3-5-1、条件运算" aria-hidden="true">#</a> 3.5.1、条件运算</h4><p>在 mongodb 不能 &gt; &lt; &gt;= &lt;= !== 等运算符，需要使用替代符号</p><p>&gt; 使用 $gt<br> &lt; 使用 $lt<br> &gt;= 使用 $gte<br> &lt;= 使用 $lte<br> !== 使用 $ne</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>BookModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">$lt</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;failed&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-5-2、逻辑运算" tabindex="-1"><a class="header-anchor" href="#_3-5-2、逻辑运算" aria-hidden="true">#</a> 3.5.2、逻辑运算</h4><p><code>$or</code> 逻辑或的情况<br><code>$and</code> 逻辑与的情况</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>BookModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">$or</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">autohr</span><span class="token operator">:</span> <span class="token string">&#39;name2&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;failed&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>


BookModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">$and</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">autohr</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;failed&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>条件中可以直接使用 JS 的正则语法，通过正则可以进行模糊查询</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>BookModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">n</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-6、个性化读取" tabindex="-1"><a class="header-anchor" href="#_3-6、个性化读取" aria-hidden="true">#</a> 3.6、个性化读取</h3><h4 id="_3-6-1、字段筛选" tabindex="-1"><a class="header-anchor" href="#_3-6-1、字段筛选" aria-hidden="true">#</a> 3.6.1、字段筛选</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//0:不要的字段</span>
<span class="token comment">//1:要的字段</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-6-2、排序" tabindex="-1"><a class="header-anchor" href="#_3-6-2、排序" aria-hidden="true">#</a> 3.6.2、排序</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//sort 排序</span>
<span class="token comment">//1:升序</span>
<span class="token comment">//-1:倒序</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">hot</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-6-3、截取" tabindex="-1"><a class="header-anchor" href="#_3-6-3、截取" aria-hidden="true">#</a> 3.6.3、截取</h4><p>跨过几条，截取几条</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//skip 跳过 limit 限定</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、图形化工具" tabindex="-1"><a class="header-anchor" href="#_4、图形化工具" aria-hidden="true">#</a> 4、图形化工具</h2><p>可以使用图形化的管理工具来对 Mongodb 进行交互</p>`,62),y={href:"https://github.com/Studio3T/robomongo/releases",target:"_blank",rel:"noopener noreferrer"},f=s("br",null,null,-1),w={href:"https://www.navicat.com.cn/",target:"_blank",rel:"noopener noreferrer"};function _(x,j){const a=o("ExternalLinkIcon");return c(),l("div",null,[s("p",null,[s("a",u,[n("MongoDB"),t(a)]),n(" 是一个基于"),r,n("的数据库")]),d,s("p",null,[n("下载地址： "),s("a",k,[n("https://www.mongodb.com/try/download/community"),t(a)])]),v,s("p",null,[s("a",m,[n("Mongoose"),t(a)]),n(" 是一个对象文档模型库"),b,n(" 可以使用 "),g,n(" 数据库")]),h,s("p",null,[n("Robo 3T 免费 "),s("a",y,[n("https://github.com/Studio3T/robomongo/releases"),t(a)]),f,n(" Navicat 收费 "),s("a",w,[n("https://www.navicat.com.cn/"),t(a)])])])}const M=e(i,[["render",_],["__file","MongoDB.html.vue"]]);export{M as default};
