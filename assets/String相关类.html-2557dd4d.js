const t=JSON.parse('{"key":"v-0a517cc6","path":"/code/java/Java%20%E5%9F%BA%E7%A1%80/%E5%B8%B8%E7%94%A8%E7%B1%BB/String%E7%9B%B8%E5%85%B3%E7%B1%BB.html","title":"String 相关类","lang":"zh-CN","frontmatter":{"title":"String 相关类","icon":"java","category":["java"],"tag":["基础语法","java"],"description":"1、String 1、理解 String 的不可变性 String 字符串，使用一对「\\"\\"」来表示 String 类声明为 final 的，不可被继承 String 类实现了 Serializable 接口：表示字符串是支持序列化的 String 类实现了 Comparable 接口，表示 String 可以比较大小 String 内部定义了 final char[] value 用于存储字符串数据 String 代表不可变的字符序列，简称「不可变性」","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/java/Java%20%E5%9F%BA%E7%A1%80/%E5%B8%B8%E7%94%A8%E7%B1%BB/String%E7%9B%B8%E5%85%B3%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"String 相关类"}],["meta",{"property":"og:description","content":"1、String 1、理解 String 的不可变性 String 字符串，使用一对「\\"\\"」来表示 String 类声明为 final 的，不可被继承 String 类实现了 Serializable 接口：表示字符串是支持序列化的 String 类实现了 Comparable 接口，表示 String 可以比较大小 String 内部定义了 final char[] value 用于存储字符串数据 String 代表不可变的字符序列，简称「不可变性」"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"基础语法"}],["meta",{"property":"article:tag","content":"java"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"String 相关类\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、String","slug":"_1、string","link":"#_1、string","children":[{"level":3,"title":"1、理解 String 的不可变性","slug":"_1、理解-string-的不可变性","link":"#_1、理解-string-的不可变性","children":[]},{"level":3,"title":"2、String 的实例化式","slug":"_2、string-的实例化式","link":"#_2、string-的实例化式","children":[]},{"level":3,"title":"3、String 常用方法","slug":"_3、string-常用方法","link":"#_3、string-常用方法","children":[]},{"level":3,"title":"4、String 与基本数据类型包装类的转换","slug":"_4、string-与基本数据类型包装类的转换","link":"#_4、string-与基本数据类型包装类的转换","children":[]}]},{"level":2,"title":"2、StringBuffer、StringBuilder","slug":"_2、stringbuffer、stringbuilder","link":"#_2、stringbuffer、stringbuilder","children":[{"level":3,"title":"1、String，StringBuffer，StringBuilder三者的异同","slug":"_1、string-stringbuffer-stringbuilder三者的异同","link":"#_1、string-stringbuffer-stringbuilder三者的异同","children":[]},{"level":3,"title":"2、StringBuffer类的常用方法","slug":"_2、stringbuffer类的常用方法","link":"#_2、stringbuffer类的常用方法","children":[]}]},{"level":2,"title":"3、 StringTokenizer 类","slug":"_3、-stringtokenizer-类","link":"#_3、-stringtokenizer-类","children":[]}],"readingTime":{"minutes":7.59,"words":2276},"filePathRelative":"code/java/Java 基础/常用类/String相关类.md","excerpt":"<h2> 1、String</h2>\\n<h3> 1、理解 String 的不可变性</h3>\\n<p>String 字符串，使用一对「\\"\\"」来表示</p>\\n<ul>\\n<li>String 类声明为 final 的，不可被继承</li>\\n<li>String 类实现了 Serializable 接口：表示字符串是支持序列化的</li>\\n<li>String 类实现了 Comparable 接口，表示 String 可以比较大小</li>\\n<li>String 内部定义了 <code>final char[] value</code> 用于存储字符串数据</li>\\n<li>String 代表不可变的字符序列，简称「不可变性」</li>\\n</ul>","autoDesc":true}');export{t as data};
