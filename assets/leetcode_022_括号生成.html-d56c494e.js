const e=JSON.parse('{"key":"v-1d4b149f","path":"/code/leetcode/leetcode_022_%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90.html","title":"022_括号生成","lang":"zh-CN","frontmatter":{"description":"022_括号生成 tag：字符串、动态规划、回溯 难度：中等 题目： 数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。 示例 1： 输入：n = 3 输出：[\\"((()))\\",\\"(()())\\",\\"(())()\\",\\"()(())\\",\\"()()()\\"] 示例 2： 输入：n = 1 输出：[\\"()\\"] 来源：力扣（LeetCode） 链接：https://leetcode.cn/problems/generate-parentheses 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/code/leetcode/leetcode_022_%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"022_括号生成"}],["meta",{"property":"og:description","content":"022_括号生成 tag：字符串、动态规划、回溯 难度：中等 题目： 数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。 示例 1： 输入：n = 3 输出：[\\"((()))\\",\\"(()())\\",\\"(())()\\",\\"()(())\\",\\"()()()\\"] 示例 2： 输入：n = 1 输出：[\\"()\\"] 来源：力扣（LeetCode） 链接：https://leetcode.cn/problems/generate-parentheses 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-24T12:06:56.000Z"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:modified_time","content":"2023-07-24T12:06:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"022_括号生成\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-24T12:06:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"解法一：","slug":"解法一","link":"#解法一","children":[]},{"level":2,"title":"解法二：","slug":"解法二","link":"#解法二","children":[]}],"git":{"createdTime":1690200416000,"updatedTime":1690200416000,"contributors":[{"name":"T4mako","email":"1536954632@qq.com","commits":1}]},"readingTime":{"minutes":1.33,"words":400},"filePathRelative":"code/leetcode/leetcode_022_括号生成.md","localizedDate":"2023年7月24日","excerpt":"<h1> 022_括号生成</h1>\\n<blockquote>\\n<p>tag：字符串、动态规划、回溯</p>\\n<p>难度：中等</p>\\n</blockquote>\\n<blockquote>\\n<p>题目：</p>\\n<p>数字 <code>n</code> 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 <strong>有效的</strong> 括号组合。</p>\\n<p>示例 1：</p>\\n<p>输入：n = 3<br>\\n输出：[\\"((()))\\",\\"(()())\\",\\"(())()\\",\\"()(())\\",\\"()()()\\"]<br>\\n示例 2：</p>\\n<p>输入：n = 1<br>\\n输出：[\\"()\\"]</p>\\n<p>来源：力扣（LeetCode）<br>\\n链接：<a href=\\"https://leetcode.cn/problems/generate-parentheses\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://leetcode.cn/problems/generate-parentheses</a><br>\\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
