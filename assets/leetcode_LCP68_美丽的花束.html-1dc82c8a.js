import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as e,e as o,b as n,d as c,f as l}from"./app-9c90829b.js";const i={},u=n("h1",{id:"lcp-68-美观的花束",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lcp-68-美观的花束","aria-hidden":"true"},"#"),c(" LCP 68_美观的花束")],-1),r=l(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">beautifulBouquet</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> flowers<span class="token punctuation">,</span> <span class="token keyword">int</span> cnt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> flowers<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">//花束小于cnt的情况</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cnt<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res <span class="token operator">+=</span> len <span class="token operator">-</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//cnt&gt;len的特殊情况</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>cnt <span class="token operator">&gt;</span> len<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>res<span class="token operator">%</span><span class="token number">1000000007</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> right<span class="token punctuation">;</span>
        <span class="token keyword">int</span> left<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>left <span class="token operator">&lt;</span> len <span class="token operator">-</span> cnt<span class="token punctuation">;</span>left<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">100000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span>right <span class="token operator">=</span> left<span class="token punctuation">;</span>right <span class="token operator">&lt;</span> len<span class="token punctuation">;</span>right<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//记录最大出现次数</span>
                count<span class="token punctuation">[</span>flowers<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
                max <span class="token operator">=</span> max <span class="token operator">&gt;</span> count<span class="token punctuation">[</span>flowers<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">?</span> max <span class="token operator">:</span> count<span class="token punctuation">[</span>flowers<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>max <span class="token operator">&gt;</span> cnt<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">//将left+1到与rignt第一个相同的数的所有可能加给res</span>
                    <span class="token keyword">while</span><span class="token punctuation">(</span>flowers<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">!=</span> flowers<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        res <span class="token operator">+=</span> right <span class="token operator">-</span> left <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> cnt<span class="token punctuation">;</span>
                        left<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                 <span class="token comment">//max &lt;= cnt的情况</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&gt;</span> cnt<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    res<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>res<span class="token operator">%</span><span class="token number">1000000007</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>先将可选花束个数小于cnt的情况加到res中，定义一个left和right指针，定义一个足够长的数组count和整形max，将右指针所指值对应数组位置+1，并与max作比较，大的那个赋给max，判断max与cnt的大小关系，如果max小于等于cnt并且left到right的长度大于等于cnt，则res++，继续执行for循环。如果max&gt;cnt，将left所指的数到right-1这一段数的所有情况加给res，直到left指向与righ所指数的后一位。</p>`,2);function k(d,v){const s=t("Badge");return p(),e("div",null,[u,o(s,{text:"中等",type:"warning",vertical:"middle"}),r])}const f=a(i,[["render",k],["__file","leetcode_LCP68_美丽的花束.html.vue"]]);export{f as default};
