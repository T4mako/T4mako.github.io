const n=JSON.parse('{"key":"v-7441d4fe","path":"/life/%E8%80%83%E8%AF%95/%E7%9C%9F%E9%A2%98%E8%A7%A3%E6%9E%90.html","title":"","lang":"zh-CN","frontmatter":{"description":"2023 编程题 4 第一问： public int readCsv() throws IOException{ File file = new File(\\"C:\\\\\\\\Users\\\\\\\\Tamako\\\\\\\\Desktop\\\\\\\\file.txt\\"); FileReader reader = new FileReader(file); BufferedReader bf = new BufferedReader(reader); String str = bf.readLine(); Pattern pattern = Pattern.compile(\\"123\\"); Matcher matcher = pattern.matcher(str); int count = 0; while (matcher.find()){ count++; } reader.close(); bf.close(); return count; }","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/life/%E8%80%83%E8%AF%95/%E7%9C%9F%E9%A2%98%E8%A7%A3%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:description","content":"2023 编程题 4 第一问： public int readCsv() throws IOException{ File file = new File(\\"C:\\\\\\\\Users\\\\\\\\Tamako\\\\\\\\Desktop\\\\\\\\file.txt\\"); FileReader reader = new FileReader(file); BufferedReader bf = new BufferedReader(reader); String str = bf.readLine(); Pattern pattern = Pattern.compile(\\"123\\"); Matcher matcher = pattern.matcher(str); int count = 0; while (matcher.find()){ count++; } reader.close(); bf.close(); return count; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"2023 编程题 4","slug":"_2023-编程题-4","link":"#_2023-编程题-4","children":[]}],"readingTime":{"minutes":0.47,"words":141},"filePathRelative":"life/考试/真题解析.md","excerpt":"<h2> 2023 编程题 4</h2>\\n<p>第一问：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">readCsv</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">IOException</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">File</span> file <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">File</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"C:\\\\\\\\Users\\\\\\\\Tamako\\\\\\\\Desktop\\\\\\\\file.txt\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">FileReader</span> reader <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">FileReader</span><span class=\\"token punctuation\\">(</span>file<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">BufferedReader</span> bf <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">BufferedReader</span><span class=\\"token punctuation\\">(</span>reader<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">String</span> str <span class=\\"token operator\\">=</span> bf<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">readLine</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">Pattern</span> pattern <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Pattern</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">compile</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"123\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">Matcher</span> matcher <span class=\\"token operator\\">=</span> pattern<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">matcher</span><span class=\\"token punctuation\\">(</span>str<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">int</span> count <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>matcher<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">find</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        count<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    reader<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    bf<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> count<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
