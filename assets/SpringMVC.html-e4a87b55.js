const e=JSON.parse('{"key":"v-376082f0","path":"/code/java/SpringMVC.html","title":"SpringMVC 基础","lang":"zh-CN","frontmatter":{"title":"SpringMVC 基础","icon":"leaf","order":9,"date":"2023-01-08T00:00:00.000Z","category":["java"],"tag":["spring","java"],"description":"1、SpringMVC简介 1、什么是MVC MVC是一种软件架构的思想，将软件按照模型、视图、控制器来划分","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/code/java/SpringMVC.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"SpringMVC 基础"}],["meta",{"property":"og:description","content":"1、SpringMVC简介 1、什么是MVC MVC是一种软件架构的思想，将软件按照模型、视图、控制器来划分"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-24T12:06:56.000Z"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2023-01-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-24T12:06:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringMVC 基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-24T12:06:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、SpringMVC简介","slug":"_1、springmvc简介","link":"#_1、springmvc简介","children":[{"level":3,"title":"1、什么是MVC","slug":"_1、什么是mvc","link":"#_1、什么是mvc","children":[]},{"level":3,"title":"2、什么是SpringMVC","slug":"_2、什么是springmvc","link":"#_2、什么是springmvc","children":[]},{"level":3,"title":"3、SpringMVC的特点","slug":"_3、springmvc的特点","link":"#_3、springmvc的特点","children":[]}]},{"level":2,"title":"2、入门案例","slug":"_2、入门案例","link":"#_2、入门案例","children":[{"level":3,"title":"1、创建maven工程","slug":"_1、创建maven工程","link":"#_1、创建maven工程","children":[]},{"level":3,"title":"2、配置web.xml","slug":"_2、配置web-xml","link":"#_2、配置web-xml","children":[]},{"level":3,"title":"3、创建请求控制器","slug":"_3、创建请求控制器","link":"#_3、创建请求控制器","children":[]},{"level":3,"title":"4、创建SpringMVC的配置文件","slug":"_4、创建springmvc的配置文件","link":"#_4、创建springmvc的配置文件","children":[]},{"level":3,"title":"5、配置Tomcat","slug":"_5、配置tomcat","link":"#_5、配置tomcat","children":[]},{"level":3,"title":"6、测试HelloWorld","slug":"_6、测试helloworld","link":"#_6、测试helloworld","children":[]},{"level":3,"title":"7、总结","slug":"_7、总结","link":"#_7、总结","children":[]},{"level":3,"title":"8、web.xml的改进","slug":"_8、web-xml的改进","link":"#_8、web-xml的改进","children":[]}]},{"level":2,"title":"3、@RequestMapping注解","slug":"_3、-requestmapping注解","link":"#_3、-requestmapping注解","children":[{"level":3,"title":"1、@RequestMapping注解的功能","slug":"_1、-requestmapping注解的功能","link":"#_1、-requestmapping注解的功能","children":[]},{"level":3,"title":"2、@RequestMapping注解的位置","slug":"_2、-requestmapping注解的位置","link":"#_2、-requestmapping注解的位置","children":[]},{"level":3,"title":"3、@RequestMapping注解的value属性","slug":"_3、-requestmapping注解的value属性","link":"#_3、-requestmapping注解的value属性","children":[]},{"level":3,"title":"4、@RequestMapping注解的method属性","slug":"_4、-requestmapping注解的method属性","link":"#_4、-requestmapping注解的method属性","children":[]},{"level":3,"title":"5、@RequestMapping注解的params属性（了解）","slug":"_5、-requestmapping注解的params属性-了解","link":"#_5、-requestmapping注解的params属性-了解","children":[]},{"level":3,"title":"6、@RequestMapping注解的headers属性（了解）","slug":"_6、-requestmapping注解的headers属性-了解","link":"#_6、-requestmapping注解的headers属性-了解","children":[]},{"level":3,"title":"7、SpringMVC支持ant风格的路径","slug":"_7、springmvc支持ant风格的路径","link":"#_7、springmvc支持ant风格的路径","children":[]},{"level":3,"title":"8、SpringMVC支持路径中的占位符（重点）","slug":"_8、springmvc支持路径中的占位符-重点","link":"#_8、springmvc支持路径中的占位符-重点","children":[]}]},{"level":2,"title":"4、SpringMVC获取请求参数","slug":"_4、springmvc获取请求参数","link":"#_4、springmvc获取请求参数","children":[{"level":3,"title":"1、通过ServletAPI获取","slug":"_1、通过servletapi获取","link":"#_1、通过servletapi获取","children":[]},{"level":3,"title":"2、通过控制器方法的形参获取请求参数","slug":"_2、通过控制器方法的形参获取请求参数","link":"#_2、通过控制器方法的形参获取请求参数","children":[]},{"level":3,"title":"3、@RequestParam  将请求参数和控制器形参绑定","slug":"_3、-requestparam-将请求参数和控制器形参绑定","link":"#_3、-requestparam-将请求参数和控制器形参绑定","children":[]},{"level":3,"title":"4、@RequestHeader","slug":"_4、-requestheader","link":"#_4、-requestheader","children":[]},{"level":3,"title":"5、@CookieValue","slug":"_5、-cookievalue","link":"#_5、-cookievalue","children":[]},{"level":3,"title":"6、通过实体类类型的形参获取请求参数","slug":"_6、通过实体类类型的形参获取请求参数","link":"#_6、通过实体类类型的形参获取请求参数","children":[]},{"level":3,"title":"7、解决获取请求参数的乱码问题","slug":"_7、解决获取请求参数的乱码问题","link":"#_7、解决获取请求参数的乱码问题","children":[]}]},{"level":2,"title":"5、域对象共享数据","slug":"_5、域对象共享数据","link":"#_5、域对象共享数据","children":[{"level":3,"title":"1、使用ServletAPI向request域对象共享数据","slug":"_1、使用servletapi向request域对象共享数据","link":"#_1、使用servletapi向request域对象共享数据","children":[]},{"level":3,"title":"2、使用ModelAndView向request域对象共享数据","slug":"_2、使用modelandview向request域对象共享数据","link":"#_2、使用modelandview向request域对象共享数据","children":[]},{"level":3,"title":"3、使用Model，ModelMap，Map向request域对象共享数据","slug":"_3、使用model-modelmap-map向request域对象共享数据","link":"#_3、使用model-modelmap-map向request域对象共享数据","children":[]},{"level":3,"title":"4、向session域共享数据","slug":"_4、向session域共享数据","link":"#_4、向session域共享数据","children":[]},{"level":3,"title":"5、向application域共享数据","slug":"_5、向application域共享数据","link":"#_5、向application域共享数据","children":[]}]},{"level":2,"title":"6、SpringMVC的视图","slug":"_6、springmvc的视图","link":"#_6、springmvc的视图","children":[{"level":3,"title":"1、ThymeleafView","slug":"_1、thymeleafview","link":"#_1、thymeleafview","children":[]},{"level":3,"title":"2、转发视图","slug":"_2、转发视图","link":"#_2、转发视图","children":[]},{"level":3,"title":"3、重定向视图","slug":"_3、重定向视图","link":"#_3、重定向视图","children":[]},{"level":3,"title":"4、视图控制器view-controller","slug":"_4、视图控制器view-controller","link":"#_4、视图控制器view-controller","children":[]}]},{"level":2,"title":"7、RESTful","slug":"_7、restful","link":"#_7、restful","children":[{"level":3,"title":"1、RESTful简介","slug":"_1、restful简介","link":"#_1、restful简介","children":[]},{"level":3,"title":"2、RESTful的实现","slug":"_2、restful的实现","link":"#_2、restful的实现","children":[]},{"level":3,"title":"3、HiddenHttpMethodFilter","slug":"_3、hiddenhttpmethodfilter","link":"#_3、hiddenhttpmethodfilter","children":[]}]},{"level":2,"title":"8、RESTful案例","slug":"_8、restful案例","link":"#_8、restful案例","children":[{"level":3,"title":"1、准备工作","slug":"_1、准备工作","link":"#_1、准备工作","children":[]},{"level":3,"title":"2、功能清单","slug":"_2、功能清单","link":"#_2、功能清单","children":[]},{"level":3,"title":"3、具体功能：访问首页","slug":"_3、具体功能-访问首页","link":"#_3、具体功能-访问首页","children":[]},{"level":3,"title":"4、具体功能：查询所有员工数据","slug":"_4、具体功能-查询所有员工数据","link":"#_4、具体功能-查询所有员工数据","children":[]},{"level":3,"title":"5、其他功能添加","slug":"_5、其他功能添加","link":"#_5、其他功能添加","children":[]}]},{"level":2,"title":"9、SpringMVC处理ajax请求","slug":"_9、springmvc处理ajax请求","link":"#_9、springmvc处理ajax请求","children":[{"level":3,"title":"1、@RequestBody","slug":"_1、-requestbody","link":"#_1、-requestbody","children":[]},{"level":3,"title":"2、@RequestBody获取json格式的请求参数","slug":"_2、-requestbody获取json格式的请求参数","link":"#_2、-requestbody获取json格式的请求参数","children":[]},{"level":3,"title":"3、@ResponseBody","slug":"_3、-responsebody","link":"#_3、-responsebody","children":[]},{"level":3,"title":"4、@ResponseBody响应浏览器json数据","slug":"_4、-responsebody响应浏览器json数据","link":"#_4、-responsebody响应浏览器json数据","children":[]},{"level":3,"title":"5、@RestController注解","slug":"_5、-restcontroller注解","link":"#_5、-restcontroller注解","children":[]}]},{"level":2,"title":"10、文件上传和下载","slug":"_10、文件上传和下载","link":"#_10、文件上传和下载","children":[{"level":3,"title":"1、文件下载","slug":"_1、文件下载","link":"#_1、文件下载","children":[]},{"level":3,"title":"2、文件上传","slug":"_2、文件上传","link":"#_2、文件上传","children":[]}]},{"level":2,"title":"11、拦截器","slug":"_11、拦截器","link":"#_11、拦截器","children":[{"level":3,"title":"1、拦截器的配置","slug":"_1、拦截器的配置","link":"#_1、拦截器的配置","children":[]},{"level":3,"title":"2、拦截器的三个抽象方法","slug":"_2、拦截器的三个抽象方法","link":"#_2、拦截器的三个抽象方法","children":[]},{"level":3,"title":"3、多个拦截器的执行顺序","slug":"_3、多个拦截器的执行顺序","link":"#_3、多个拦截器的执行顺序","children":[]}]},{"level":2,"title":"12、异常处理器","slug":"_12、异常处理器","link":"#_12、异常处理器","children":[{"level":3,"title":"1、基于配置的异常处理","slug":"_1、基于配置的异常处理","link":"#_1、基于配置的异常处理","children":[]},{"level":3,"title":"2、基于注解的异常处理","slug":"_2、基于注解的异常处理","link":"#_2、基于注解的异常处理","children":[]}]},{"level":2,"title":"13、注解配置SpringMVC","slug":"_13、注解配置springmvc","link":"#_13、注解配置springmvc","children":[{"level":3,"title":"1、WebInit类，代替web.xml","slug":"_1、webinit类-代替web-xml","link":"#_1、webinit类-代替web-xml","children":[]},{"level":3,"title":"2、SpringConfig类，代替spring的配置文件","slug":"_2、springconfig类-代替spring的配置文件","link":"#_2、springconfig类-代替spring的配置文件","children":[]},{"level":3,"title":"3、WebConfig类，代替SpringMVC的配置文件：","slug":"_3、webconfig类-代替springmvc的配置文件","link":"#_3、webconfig类-代替springmvc的配置文件","children":[]}]},{"level":2,"title":"14、SpringMVC执行流程","slug":"_14、springmvc执行流程","link":"#_14、springmvc执行流程","children":[{"level":3,"title":"14.1、SpringMVC常用组件","slug":"_14-1、springmvc常用组件","link":"#_14-1、springmvc常用组件","children":[]},{"level":3,"title":"14.2、DispatcherServlet初始化过程","slug":"_14-2、dispatcherservlet初始化过程","link":"#_14-2、dispatcherservlet初始化过程","children":[]},{"level":3,"title":"14.3、DispatcherServlet调用组件处理请求","slug":"_14-3、dispatcherservlet调用组件处理请求","link":"#_14-3、dispatcherservlet调用组件处理请求","children":[]},{"level":3,"title":"14.4、SpringMVC的执行流程","slug":"_14-4、springmvc的执行流程","link":"#_14-4、springmvc的执行流程","children":[]}]},{"level":2,"title":"15、SSM整合","slug":"_15、ssm整合","link":"#_15、ssm整合","children":[{"level":3,"title":"1、ContextLoaderListener","slug":"_1、contextloaderlistener","link":"#_1、contextloaderlistener","children":[]},{"level":3,"title":"2、准备工作","slug":"_2、准备工作","link":"#_2、准备工作","children":[]},{"level":3,"title":"3、配置web.xml","slug":"_3、配置web-xml","link":"#_3、配置web-xml","children":[]},{"level":3,"title":"4、配置springmvc.xml","slug":"_4、配置springmvc-xml","link":"#_4、配置springmvc-xml","children":[]},{"level":3,"title":"5、搭建MyBatis环境","slug":"_5、搭建mybatis环境","link":"#_5、搭建mybatis环境","children":[]},{"level":3,"title":"6、创建Spring的配置文件并配置","slug":"_6、创建spring的配置文件并配置","link":"#_6、创建spring的配置文件并配置","children":[]},{"level":3,"title":"7、测试功能","slug":"_7、测试功能","link":"#_7、测试功能","children":[]}]}],"git":{"createdTime":1690200416000,"updatedTime":1690200416000,"contributors":[{"name":"T4mako","email":"1536954632@qq.com","commits":1}]},"readingTime":{"minutes":42.71,"words":12814},"filePathRelative":"code/java/SpringMVC.md","localizedDate":"2023年1月8日","excerpt":"<h2> 1、SpringMVC简介</h2>\\n<h3> 1、什么是MVC</h3>\\n<p>MVC是一种软件架构的<strong>思想</strong>，将软件按照<strong>模型、视图、控制器</strong>来划分</p>\\n","autoDesc":true}');export{e as data};
