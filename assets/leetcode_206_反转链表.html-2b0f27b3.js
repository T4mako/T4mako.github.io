import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as l,c,e as a,b as n,d as e,f as i}from"./app-4d0d3496.js";const r={},d=n("h1",{id:"_206-反转链表",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_206-反转链表","aria-hidden":"true"},"#"),e(" 206. 反转链表")],-1),u={href:"https://leetcode.cn/problems/reverse-linked-list/description/?envType=study-plan-v2&envId=leetcode-75",target:"_blank",rel:"noopener noreferrer"},k=i(`<p>解法思路：</p><ul><li>定义两个指针，初始指向 null 和 head</li><li>在两个指针不断后移吧并改变指针的指向，时间复杂度为O(n)</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">reverseList</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> head<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> p <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> n <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">ListNode</span> temp <span class="token operator">=</span> n<span class="token punctuation">;</span>
            n <span class="token operator">=</span> n<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            temp<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
            p <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function v(m,_){const t=s("Badge"),p=s("ExternalLinkIcon");return l(),c("div",null,[d,a(t,{text:"简单",type:"tip",vertical:"middle"}),n("p",null,[n("a",u,[e("题目描述"),a(p)])]),k])}const f=o(r,[["render",v],["__file","leetcode_206_反转链表.html.vue"]]);export{f as default};
