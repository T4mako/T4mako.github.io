import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as e,b as o,e as c,w as i,f as n,d as l}from"./app-9d5fd685.js";const u={},r=n(`<h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><p>数组是有序排列的<br> 数组属于 <strong>引用数据类型</strong><br> 数组的元素既可以是 <strong>基本数据类型</strong>，也可以是 <strong>引用数据类型</strong><br> 创建数组对象会在内存中开辟一整块 <strong>连续</strong> 的空间<br> 数组的 <strong>长度一旦确定就不能修改</strong></p><p>数组的长度：<code>数组.length</code></p><h3 id="_1、一维数组" tabindex="-1"><a class="header-anchor" href="#_1、一维数组" aria-hidden="true">#</a> 1、一维数组</h3><p>数组一旦 <strong>初始化</strong>，其长度就是确定的且不可修改</p><p>一维数组的 <strong>声明</strong> 和 <strong>初始化</strong>（静态初始化，动态初始化）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayTest</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 声明了两个一维数组，一个二维数组</span>
    <span class="token keyword">int</span> d<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>e<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>f<span class="token punctuation">;</span> <span class="token comment">// 声明了二维数组，一维数组，一个 int</span>

		<span class="token comment">// 一维数组的声明和初始化</span>
		<span class="token comment">// 静态初始化：数组的初始化和数组元素的赋值操作同时进行</span>
		<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids<span class="token punctuation">;</span>
		ids <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">1002</span><span class="token punctuation">,</span> <span class="token number">1003</span><span class="token punctuation">,</span> <span class="token number">1004</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
		<span class="token comment">// 动态初始化：数组的初始化和数组元素的赋值操作分开进行</span>
		<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> names <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

		
		

		<span class="token comment">// 调用数组指定位置的元素</span>
		names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>

		<span class="token comment">// 获取数组长度</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>names<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">//一维数组元素的默认初始化值</span>
		<span class="token comment">/*
		 整型数组：0 
		 浮点型数组：0.0 
		 字符型数组：0 （不是 &#39;0&#39;）
		 boolean数组：false 
		 String数组（引用类型）：null
		 */</span>
		<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><ol><li>关于 char 数组的输出：<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> test <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;b&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ab</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> test<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 地址值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>数组复制：<br> Stream.arraycopy()<br> Arrays.copyOf()<br> Arrays.copyOfRane()</li></ol></div><p>内存的简化结构：<br><img src="https://raw.githubusercontent.com/T4mako/ImageBed/main/image-20220626150314398.png" alt="image-20220626150314398" loading="lazy"></p><p>一维数组内存实例：<br><img src="https://raw.githubusercontent.com/T4mako/ImageBed/main/image-20220626151804844.png" alt="image-20220626151804844" loading="lazy"></p><h3 id="_2、多维数组" tabindex="-1"><a class="header-anchor" href="#_2、多维数组" aria-hidden="true">#</a> 2、多维数组</h3><p>静态初始化，动态初始化</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>二维数组 <strong>第一个</strong> 数必须有</p></div><h4 id="二维数组初始化" tabindex="-1"><a class="header-anchor" href="#二维数组初始化" aria-hidden="true">#</a> 二维数组初始化</h4><p>静态初始化： <code>int[][] arr1 = new int[][]{{1,2,3},{4,5}}; </code> （a[0].length 等于 3，a[1].length 等于 2）<br> 动态初始化:<br><code>String[][] str2 = new String[3][];</code><br><code>String[][] str1 = new String[3][2];</code><br><code>int[] arr2[] = new int[3][2]; </code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token comment">//二维数组的调用</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token comment">//对二维数组中每个一维数组初始化</span>
		arr2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		
		
		<span class="token comment">//二维数组初始化</span>
		<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arra <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//地址值</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr0<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//地址值</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr0<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arra<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//null 引用数据类型默认值null</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arra<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//报错，空指针异常</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>关于二维数组初始化默认值：<br><code>int[][] arr = new int[4][3];</code></p><ul><li>外层元素的初始化值为：地址值</li><li>内层元素的初始化值为：与一维数组初始化值相同</li></ul><p><code>int[][] arr = new int[4][0];</code></p><ul><li>外层元素的初始化值为：null</li><li>内层元素的初始化值为：不能调用，报错。</li></ul></div><p>二维数组的内存解析</p><p><img src="https://raw.githubusercontent.com/T4mako/ImageBed/main/image-20220626172438875.png" alt="image-20220626172438875" loading="lazy"></p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>数组末尾元素的下标是arr.length-1</p></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>数组的复制：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//不能直接 arr = arr2 赋值地址，本质为一个</span>
<span class="token keyword">int</span> arr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//for循环对每一个赋值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="_3、arrays-工具类" tabindex="-1"><a class="header-anchor" href="#_3、arrays-工具类" aria-hidden="true">#</a> 3、Arrays 工具类</h3><p><strong>java.util.Arrays</strong> 类为操作数组的工具类，包含了操作数组的各种方法（包括排序，查找等）。</p>`,23),k=n('<p><img src="https://raw.githubusercontent.com/T4mako/ImageBed/main/image-20220627162154617.png" alt="image-20220627162154617" loading="lazy"></p><h3 id="_4、数组中的常见异常" tabindex="-1"><a class="header-anchor" href="#_4、数组中的常见异常" aria-hidden="true">#</a> 4、数组中的常见异常</h3><ul><li>索引越界：<code>ArrayIndexOutOfBoundException</code></li><li>空指针异常：<code>NullPointerException</code></li></ul><p>对于 <code>int arr[4][];</code></p><ul><li>调用 <code>arr[0]</code> 结果为 null</li><li>调用 <code>arr[0][0]</code> 空指针异常</li></ul>',5);function d(m,v){const s=t("RouterLink");return p(),e("div",null,[r,o("p",null,[c(s,{to:"/code/java/Java%20%E5%9F%BA%E7%A1%80/%E5%B8%B8%E7%94%A8%E7%B1%BB/Arrays%E7%B1%BB.html"},{default:i(()=>[l("关于 Arrays 类")]),_:1})]),k])}const h=a(u,[["render",d],["__file","5、数组.html.vue"]]);export{h as default};
