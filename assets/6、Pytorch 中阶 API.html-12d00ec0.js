const t=JSON.parse('{"key":"v-232248a0","path":"/code/python/Machine%20Learning/Pytorch/6%E3%80%81Pytorch%20%E4%B8%AD%E9%98%B6%20API.html","title":"6、Pytorch 中阶 API","lang":"zh-CN","frontmatter":{"description":"6、Pytorch 中阶 API 6.1、Dataset 和 DataLoader Pytorch 使用 Dataset 和 DataLoader 这两个工具类来构建数据管道。它们的作用是将数据整理成适合训练模型的格式，一个 batch 一个 batch 的取出给模型 6.1.1、Dataset 和 DataLoader 原理 获取一个 batch 的步骤 假定数据集的特征和标签分别表示为张量X和Y，数据集可以表+示为 (X,Y), 假定 batch 大小为 m","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/python/Machine%20Learning/Pytorch/6%E3%80%81Pytorch%20%E4%B8%AD%E9%98%B6%20API.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"6、Pytorch 中阶 API"}],["meta",{"property":"og:description","content":"6、Pytorch 中阶 API 6.1、Dataset 和 DataLoader Pytorch 使用 Dataset 和 DataLoader 这两个工具类来构建数据管道。它们的作用是将数据整理成适合训练模型的格式，一个 batch 一个 batch 的取出给模型 6.1.1、Dataset 和 DataLoader 原理 获取一个 batch 的步骤 假定数据集的特征和标签分别表示为张量X和Y，数据集可以表+示为 (X,Y), 假定 batch 大小为 m"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"6、Pytorch 中阶 API\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"6.1、Dataset 和 DataLoader","slug":"_6-1、dataset-和-dataloader","link":"#_6-1、dataset-和-dataloader","children":[{"level":3,"title":"6.1.1、Dataset 和 DataLoader 原理","slug":"_6-1-1、dataset-和-dataloader-原理","link":"#_6-1-1、dataset-和-dataloader-原理","children":[]},{"level":3,"title":"6.1.2、Dataset 使用","slug":"_6-1-2、dataset-使用","link":"#_6-1-2、dataset-使用","children":[]},{"level":3,"title":"6.1.3、使用 DataLoader 加载数据集","slug":"_6-1-3、使用-dataloader-加载数据集","link":"#_6-1-3、使用-dataloader-加载数据集","children":[]}]},{"level":2,"title":"6.2、模型层 torch.nn","slug":"_6-2、模型层-torch-nn","link":"#_6-2、模型层-torch-nn","children":[{"level":3,"title":"6.2.1、基础层","slug":"_6-2-1、基础层","link":"#_6-2-1、基础层","children":[]},{"level":3,"title":"6.2.2、卷积网络相关层","slug":"_6-2-2、卷积网络相关层","link":"#_6-2-2、卷积网络相关层","children":[]},{"level":3,"title":"6.2.3、循环网络相关层","slug":"_6-2-3、循环网络相关层","link":"#_6-2-3、循环网络相关层","children":[]},{"level":3,"title":"6.2.4、Transformer 相关层","slug":"_6-2-4、transformer-相关层","link":"#_6-2-4、transformer-相关层","children":[]},{"level":3,"title":"6.2.5、自定义模型层","slug":"_6-2-5、自定义模型层","link":"#_6-2-5、自定义模型层","children":[]}]},{"level":2,"title":"6.3、损失函数 losses","slug":"_6-3、损失函数-losses","link":"#_6-3、损失函数-losses","children":[{"level":3,"title":"6.3.1、内置损失函数","slug":"_6-3-1、内置损失函数","link":"#_6-3-1、内置损失函数","children":[]},{"level":3,"title":"6.3.2、自定义损失函数","slug":"_6-3-2、自定义损失函数","link":"#_6-3-2、自定义损失函数","children":[]},{"level":3,"title":"6.3.3、L1 和 L2正则化项","slug":"_6-3-3、l1-和-l2正则化项","link":"#_6-3-3、l1-和-l2正则化项","children":[]},{"level":3,"title":"6.3.4、L1L2 正则项使用完整范例","slug":"_6-3-4、l1l2-正则项使用完整范例","link":"#_6-3-4、l1l2-正则项使用完整范例","children":[]},{"level":3,"title":"6.3.5、通过优化器实现 L2 正则化","slug":"_6-3-5、通过优化器实现-l2-正则化","link":"#_6-3-5、通过优化器实现-l2-正则化","children":[]}]},{"level":2,"title":"6.4、TensorBoard 可视化","slug":"_6-4、tensorboard-可视化","link":"#_6-4、tensorboard-可视化","children":[{"level":3,"title":"6.4.0、Tensorboard 可视化概述","slug":"_6-4-0、tensorboard-可视化概述","link":"#_6-4-0、tensorboard-可视化概述","children":[]}]}],"readingTime":{"minutes":30.23,"words":9070},"filePathRelative":"code/python/Machine Learning/Pytorch/6、Pytorch 中阶 API.md","excerpt":"<h1> 6、Pytorch 中阶 API</h1>\\n<h2> 6.1、Dataset 和 DataLoader</h2>\\n<p>Pytorch 使用 Dataset 和 DataLoader 这两个工具类来构建数据管道。它们的作用是将数据整理成适合训练模型的格式，一个 batch 一个 batch 的取出给模型</p>\\n<h3> 6.1.1、Dataset 和 DataLoader 原理</h3>\\n<h4> 获取一个 batch 的步骤</h4>\\n<p>假定数据集的特征和标签分别表示为张量<code>X</code>和<code>Y</code>，数据集可以表+示为 <code>(X,Y)</code>, 假定 batch 大小为 <code>m</code></p>","autoDesc":true}');export{t as data};
