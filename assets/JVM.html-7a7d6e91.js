const e=JSON.parse('{"key":"v-0d0d1c5c","path":"/code/java/JVM.html","title":"JVM 相关知识点汇总","lang":"zh-CN","frontmatter":{"date":"2023-08-20T00:00:00.000Z","category":"java","tag":"jvm","title":"JVM 相关知识点汇总","description":"JVM(Java Virtual Machine) 其实就类似于一台小电脑运行在 windows 或者 linux 这些操作系统环境下即可。 它直接和操作系统进行交互，与硬件不直接交互，而操作系统可以帮我们完成和硬件进行交互的工作。 1、基础知识 JVM Java 虚拟机（JVM）是运行 Java 字节码的虚拟机。 JVM 有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。 字节码和不同系统的 JVM 实现是 Java 语言“一次编译，随处可以运行”的关键所在。","head":[["meta",{"property":"og:url","content":"https://T4mako.github.io/code/java/JVM.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"JVM 相关知识点汇总"}],["meta",{"property":"og:description","content":"JVM(Java Virtual Machine) 其实就类似于一台小电脑运行在 windows 或者 linux 这些操作系统环境下即可。 它直接和操作系统进行交互，与硬件不直接交互，而操作系统可以帮我们完成和硬件进行交互的工作。 1、基础知识 JVM Java 虚拟机（JVM）是运行 Java 字节码的虚拟机。 JVM 有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。 字节码和不同系统的 JVM 实现是 Java 语言“一次编译，随处可以运行”的关键所在。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"jvm"}],["meta",{"property":"article:published_time","content":"2023-08-20T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM 相关知识点汇总\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-20T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、基础知识","slug":"_1、基础知识","link":"#_1、基础知识","children":[{"level":3,"title":"JVM","slug":"jvm","link":"#jvm","children":[]},{"level":3,"title":"JDK 和 JRE","slug":"jdk-和-jre","link":"#jdk-和-jre","children":[]},{"level":3,"title":"字节码","slug":"字节码","link":"#字节码","children":[]},{"level":3,"title":"Java 语言“编译与解释并存”的原因","slug":"java-语言-编译与解释并存-的原因","link":"#java-语言-编译与解释并存-的原因","children":[]},{"level":3,"title":"Oracle JDK vs OpenJDK","slug":"oracle-jdk-vs-openjdk","link":"#oracle-jdk-vs-openjdk","children":[]}]},{"level":2,"title":"2、Java 文件是如何被运行的","slug":"_2、java-文件是如何被运行的","link":"#_2、java-文件是如何被运行的","children":[{"level":3,"title":"① 类加载器","slug":"_1-类加载器","link":"#_1-类加载器","children":[]},{"level":3,"title":"② 方法区","slug":"_2-方法区","link":"#_2-方法区","children":[]},{"level":3,"title":"③ 堆","slug":"_3-堆","link":"#_3-堆","children":[]},{"level":3,"title":"④ 栈","slug":"_4-栈","link":"#_4-栈","children":[]},{"level":3,"title":"⑤ 程序计数器","slug":"_5-程序计数器","link":"#_5-程序计数器","children":[]},{"level":3,"title":"一个简单的示例","slug":"一个简单的示例","link":"#一个简单的示例","children":[]}]}],"readingTime":{"minutes":10.8,"words":3240},"filePathRelative":"code/java/JVM.md","localizedDate":"2023年8月20日","excerpt":"<p>JVM(Java Virtual Machine) 其实就类似于一台小电脑运行在 windows 或者 linux 这些操作系统环境下即可。<br>\\n它直接和操作系统进行交互，与硬件不直接交互，而操作系统可以帮我们完成和硬件进行交互的工作。</p>\\n<h2> 1、基础知识</h2>\\n<h3> JVM</h3>\\n<p>Java 虚拟机（JVM）是运行 Java 字节码的虚拟机。</p>\\n<p>JVM 有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。</p>\\n<p>字节码和不同系统的 JVM 实现是 Java 语言“一次编译，随处可以运行”的关键所在。</p>","autoDesc":true}');export{e as data};
