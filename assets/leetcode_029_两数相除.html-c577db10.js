import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,e as t,b as n,d as c,f as l}from"./app-35caaea9.js";const i={},r=n("h1",{id:"_029-两数相除",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_029-两数相除","aria-hidden":"true"},"#"),c(" 029_两数相除")],-1),d=l(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token keyword">int</span> dividend<span class="token punctuation">,</span> <span class="token keyword">int</span> divisor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>dividend <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">2147483648</span> <span class="token operator">&amp;&amp;</span> divisor <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">2147483647</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>divisor <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> dividend<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>divisor <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span>dividend<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>dividend <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> divisor <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> dividend <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> divisor <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> <span class="token constant">LIMIT</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1073741824</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> dividend <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> dividend <span class="token operator">:</span> <span class="token operator">-</span>dividend<span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> divisor <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> divisor <span class="token operator">:</span> <span class="token operator">-</span>divisor<span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>a <span class="token operator">&lt;=</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> b<span class="token punctuation">,</span>d <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>c <span class="token operator">&gt;=</span> <span class="token constant">LIMIT</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">&gt;=</span> <span class="token constant">LIMIT</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&gt;=</span> a <span class="token operator">-</span> c<span class="token punctuation">)</span><span class="token punctuation">{</span>
                c <span class="token operator">+=</span> c<span class="token punctuation">;</span>
                d <span class="token operator">+=</span> d<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            a <span class="token operator">-=</span> c<span class="token punctuation">;</span>
            res <span class="token operator">+=</span> d<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> flag <span class="token operator">?</span> <span class="token operator">-</span>res <span class="token operator">:</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据题意，先将特殊情况列出，再对于除数为1，-1的情况讨论。对于其他情况，定义一个LIMIT为-1073741824，定义一个flag判断返回的值为正数还是负数。将a，b都赋值为负数，通过倍加的方法将a不断扩大，当c，d都大于等于LIMIT并且c&gt;a-c时，此时符合倍加条件，用来记录的d和c都倍加，如果不满足条件。将a-=c，a变大，res+=d，res增加响应的倍值。最后通过flag返回res。</p>`,2);function k(u,v){const s=p("Badge");return e(),o("div",null,[r,t(s,{text:"中等",type:"warning",vertical:"middle"}),d])}const _=a(i,[["render",k],["__file","leetcode_029_两数相除.html.vue"]]);export{_ as default};
