const l=JSON.parse('{"key":"v-139c10c2","path":"/code/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Git.html","title":"git 基础","lang":"zh-CN","frontmatter":{"title":"git 基础","icon":"git","order":1,"category":["基础"],"tag":["git"],"description":"0、常用命令速览： ①git工作机制： 工作区（写代码）git add → 暂存区（临时存储）git commit → 本地库（会生成对应的历史版本）push→ 远程库 ②在本地使用的git命令： 命令 解释 git add 文件名(*) 添加到暂存区 git commit -m \\"日志信息\\" 文件名(*) 提交到本地库 git reflog 查看历史记录 git reset --hard 版本号 版本穿梭 git log 查看版本详细信息 git config --list 查看配置信息 git config --global user.name 用户名 git config --global user.email 邮箱","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/code/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Git.html"}],["meta",{"property":"og:site_name","content":"T4mako"}],["meta",{"property":"og:title","content":"git 基础"}],["meta",{"property":"og:description","content":"0、常用命令速览： ①git工作机制： 工作区（写代码）git add → 暂存区（临时存储）git commit → 本地库（会生成对应的历史版本）push→ 远程库 ②在本地使用的git命令： 命令 解释 git add 文件名(*) 添加到暂存区 git commit -m \\"日志信息\\" 文件名(*) 提交到本地库 git reflog 查看历史记录 git reset --hard 版本号 版本穿梭 git log 查看版本详细信息 git config --list 查看配置信息 git config --global user.name 用户名 git config --global user.email 邮箱"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-24T12:06:56.000Z"}],["meta",{"property":"article:author","content":"T4mako"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:modified_time","content":"2023-07-24T12:06:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git 基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-24T12:06:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"T4mako\\",\\"url\\":\\"https://github.com/T4mako/T4mako.github.io\\"}]}"]]},"headers":[{"level":2,"title":"0、常用命令速览：","slug":"_0、常用命令速览","link":"#_0、常用命令速览","children":[{"level":3,"title":"①git工作机制：","slug":"_1git工作机制","link":"#_1git工作机制","children":[]},{"level":3,"title":"②在本地使用的git命令：","slug":"_2在本地使用的git命令","link":"#_2在本地使用的git命令","children":[]},{"level":3,"title":"③远程仓库操作","slug":"_3远程仓库操作","link":"#_3远程仓库操作","children":[]},{"level":3,"title":"④分支操作","slug":"_4分支操作","link":"#_4分支操作","children":[]},{"level":3,"title":"⑤标签操作","slug":"_5标签操作","link":"#_5标签操作","children":[]}]},{"level":2,"title":"1、Git 概述","slug":"_1、git-概述","link":"#_1、git-概述","children":[{"level":3,"title":"1.1 何为版本控制","slug":"_1-1-何为版本控制","link":"#_1-1-何为版本控制","children":[]},{"level":3,"title":"1.2 版本控制工具","slug":"_1-2-版本控制工具","link":"#_1-2-版本控制工具","children":[]},{"level":3,"title":"1.3 Git 简史","slug":"_1-3-git-简史","link":"#_1-3-git-简史","children":[]},{"level":3,"title":"1.4 Git 工作机制","slug":"_1-4-git-工作机制","link":"#_1-4-git-工作机制","children":[]},{"level":3,"title":"1.5 Git 和代码托管中心","slug":"_1-5-git-和代码托管中心","link":"#_1-5-git-和代码托管中心","children":[]}]},{"level":2,"title":"2、Git 安装","slug":"_2、git-安装","link":"#_2、git-安装","children":[]},{"level":2,"title":"3、Git本地命令","slug":"_3、git本地命令","link":"#_3、git本地命令","children":[{"level":3,"title":"3.1 设置用户签名","slug":"_3-1-设置用户签名","link":"#_3-1-设置用户签名","children":[]},{"level":3,"title":"3.2 初始化本地库","slug":"_3-2-初始化本地库","link":"#_3-2-初始化本地库","children":[]},{"level":3,"title":"3.3 查看本地库状态","slug":"_3-3-查看本地库状态","link":"#_3-3-查看本地库状态","children":[]},{"level":3,"title":"3.4 添加暂存区","slug":"_3-4-添加暂存区","link":"#_3-4-添加暂存区","children":[]},{"level":3,"title":"3.5 提交本地库","slug":"_3-5-提交本地库","link":"#_3-5-提交本地库","children":[]},{"level":3,"title":"3.6 历史版本","slug":"_3-6-历史版本","link":"#_3-6-历史版本","children":[]}]},{"level":2,"title":"4、Git 分支操作","slug":"_4、git-分支操作","link":"#_4、git-分支操作","children":[{"level":3,"title":"4.1 什么是分支","slug":"_4-1-什么是分支","link":"#_4-1-什么是分支","children":[]},{"level":3,"title":"4.2 分支的好处","slug":"_4-2-分支的好处","link":"#_4-2-分支的好处","children":[]},{"level":3,"title":"4.3 分支的操作","slug":"_4-3-分支的操作","link":"#_4-3-分支的操作","children":[]},{"level":3,"title":"4.4 创建分支和切换分支图解","slug":"_4-4-创建分支和切换分支图解","link":"#_4-4-创建分支和切换分支图解","children":[]}]},{"level":2,"title":"5、Git 团队协作机制","slug":"_5、git-团队协作机制","link":"#_5、git-团队协作机制","children":[{"level":3,"title":"5.1 团队内协作","slug":"_5-1-团队内协作","link":"#_5-1-团队内协作","children":[]},{"level":3,"title":"5.2 跨团队协作","slug":"_5-2-跨团队协作","link":"#_5-2-跨团队协作","children":[]}]},{"level":2,"title":"6、GitHub/git远程命令","slug":"_6、github-git远程命令","link":"#_6、github-git远程命令","children":[{"level":3,"title":"6.1 创建远程仓库","slug":"_6-1-创建远程仓库","link":"#_6-1-创建远程仓库","children":[]},{"level":3,"title":"6.2 远程仓库操作","slug":"_6-2-远程仓库操作","link":"#_6-2-远程仓库操作","children":[]},{"level":3,"title":"6.3 跨团队协作","slug":"_6-3-跨团队协作","link":"#_6-3-跨团队协作","children":[]},{"level":3,"title":"6.4 SSH 免密登录","slug":"_6-4-ssh-免密登录","link":"#_6-4-ssh-免密登录","children":[]}]},{"level":2,"title":"7、IDEA 集成 Git","slug":"_7、idea-集成-git","link":"#_7、idea-集成-git","children":[{"level":3,"title":"7.1 配置 Git 忽略文件","slug":"_7-1-配置-git-忽略文件","link":"#_7-1-配置-git-忽略文件","children":[]},{"level":3,"title":"7.2 定位 Git 程序","slug":"_7-2-定位-git-程序","link":"#_7-2-定位-git-程序","children":[]},{"level":3,"title":"7.3 初始化本地库","slug":"_7-3-初始化本地库","link":"#_7-3-初始化本地库","children":[]},{"level":3,"title":"7.4 添加到暂存区、提交到本地库","slug":"_7-4-添加到暂存区、提交到本地库","link":"#_7-4-添加到暂存区、提交到本地库","children":[]},{"level":3,"title":"7.5 切换版本","slug":"_7-5-切换版本","link":"#_7-5-切换版本","children":[]},{"level":3,"title":"7.6 创建分支","slug":"_7-6-创建分支","link":"#_7-6-创建分支","children":[]},{"level":3,"title":"7.7 切换分支","slug":"_7-7-切换分支","link":"#_7-7-切换分支","children":[]},{"level":3,"title":"7.8 合并分支","slug":"_7-8-合并分支","link":"#_7-8-合并分支","children":[]},{"level":3,"title":"7.9 解决冲突","slug":"_7-9-解决冲突","link":"#_7-9-解决冲突","children":[]}]},{"level":2,"title":"8、IDEA 集成 GitHub","slug":"_8、idea-集成-github","link":"#_8、idea-集成-github","children":[{"level":3,"title":"8.1 设置 GitHub 账号","slug":"_8-1-设置-github-账号","link":"#_8-1-设置-github-账号","children":[]},{"level":3,"title":"8.2 分享工程到 GitHub","slug":"_8-2-分享工程到-github","link":"#_8-2-分享工程到-github","children":[]},{"level":3,"title":"8.3 push 推送本地库到远程库","slug":"_8-3-push-推送本地库到远程库","link":"#_8-3-push-推送本地库到远程库","children":[]},{"level":3,"title":"8.4 pull 拉取远程库到本地库","slug":"_8-4-pull-拉取远程库到本地库","link":"#_8-4-pull-拉取远程库到本地库","children":[]},{"level":3,"title":"8.5 clone 克隆远程库到本地","slug":"_8-5-clone-克隆远程库到本地","link":"#_8-5-clone-克隆远程库到本地","children":[]}]},{"level":2,"title":"9、码云","slug":"_9、码云","link":"#_9、码云","children":[{"level":3,"title":"9.1 码云创建远程库","slug":"_9-1-码云创建远程库","link":"#_9-1-码云创建远程库","children":[]},{"level":3,"title":"9.2 IDEA 集成码云","slug":"_9-2-idea-集成码云","link":"#_9-2-idea-集成码云","children":[]},{"level":3,"title":"9.3 码云复制 GitHub 项目","slug":"_9-3-码云复制-github-项目","link":"#_9-3-码云复制-github-项目","children":[]}]},{"level":2,"title":"10、自建代码托管平台-GitLab","slug":"_10、自建代码托管平台-gitlab","link":"#_10、自建代码托管平台-gitlab","children":[{"level":3,"title":"10.1 GitLab 简介","slug":"_10-1-gitlab-简介","link":"#_10-1-gitlab-简介","children":[]},{"level":3,"title":"10.2 GitLab 官网地址","slug":"_10-2-gitlab-官网地址","link":"#_10-2-gitlab-官网地址","children":[]},{"level":3,"title":"10.3 GitLab 安装","slug":"_10-3-gitlab-安装","link":"#_10-3-gitlab-安装","children":[]}]},{"level":2,"title":"11、Git标签操作","slug":"_11、git标签操作","link":"#_11、git标签操作","children":[]}],"git":{"createdTime":1690200416000,"updatedTime":1690200416000,"contributors":[{"name":"T4mako","email":"1536954632@qq.com","commits":1}]},"readingTime":{"minutes":16.42,"words":4925},"filePathRelative":"code/基础知识/Git.md","localizedDate":"2023年7月24日","excerpt":"<h2> 0、常用命令速览：</h2>\\n<h3> ①git工作机制：</h3>\\n<p><strong>工作区（写代码）<code>git add</code> → 暂存区（临时存储）<code>git commit</code> → 本地库（会生成对应的历史版本）<code>push</code>→ 远程库</strong></p>\\n<h3> ②在本地使用的git命令：</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>命令</th>\\n<th>解释</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>git add 文件名(*)</td>\\n<td>添加到暂存区</td>\\n</tr>\\n<tr>\\n<td>git commit -m \\"日志信息\\" 文件名(*)</td>\\n<td>提交到本地库</td>\\n</tr>\\n<tr>\\n<td>git reflog</td>\\n<td>查看历史记录</td>\\n</tr>\\n<tr>\\n<td>git reset --hard 版本号</td>\\n<td>版本穿梭</td>\\n</tr>\\n<tr>\\n<td>git log</td>\\n<td>查看版本详细信息</td>\\n</tr>\\n<tr>\\n<td>git config --list</td>\\n<td>查看配置信息</td>\\n</tr>\\n<tr>\\n<td>git config --global <a href=\\"http://user.name\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">user.name</a></td>\\n<td>用户名</td>\\n</tr>\\n<tr>\\n<td>git config --global user.email</td>\\n<td>邮箱</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{l as data};
