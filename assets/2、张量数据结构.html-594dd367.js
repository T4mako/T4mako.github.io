import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,d as t}from"./app-392a5c85.js";const p={},o=t(`<h1 id="_2、张量数据结构" tabindex="-1"><a class="header-anchor" href="#_2、张量数据结构" aria-hidden="true">#</a> 2、张量数据结构</h1><h2 id="_2-1、张量数据类型" tabindex="-1"><a class="header-anchor" href="#_2-1、张量数据类型" aria-hidden="true">#</a> 2.1、张量数据类型</h2><p>张量的数据类型和 numpy.array 基本一一对应，但是不支持 str 类型</p><p>在 python 中有数据类型 int、float......<br> 在 PyTorch 中对应 IntTensor，FloatTensor......，同时该数据类型有 <strong>维度</strong>，如 int 标量 <code>3</code> 的维度是 0，<code>矩阵</code> 的维度是 2</p><ul><li>torch.float64(torch.double)</li><li><strong>torch.float32(torch.float)</strong></li><li>torch.float16</li><li>torch.int64(torch.long)</li><li>torch.int32(torch.int)</li><li>torch.int16</li><li>torch.int8</li><li>torch.uint8</li><li>torch.bool</li></ul><table><thead><tr><th>数据类型</th><th>dtype</th><th>CPU Tensor</th><th>GPU Tensor</th></tr></thead><tbody><tr><td>32bit float</td><td><code>torch.float</code> or <code>torch.float32</code></td><td>torch.FloatTensor</td><td>torch.cuda.FloatTensor</td></tr><tr><td>64bit float</td><td><code>torch.double</code> or <code>torch.float64</code></td><td>torch.DoubleTensor</td><td>torch.cuda.DoubleTensor</td></tr><tr><td>8bit integer</td><td><code>torch.uint8</code></td><td>torch.ByteTensor</td><td>torch.cuda.ByteTensor</td></tr><tr><td>32bit integer</td><td><code>torch.int32</code> or <code>torch.int</code></td><td>torch.IntTensor</td><td>torch.cuda.IntTensor</td></tr><tr><td>64bit integer</td><td><code>torch.int64</code> or <code>torch.long</code></td><td>torch.LongTensor</td><td>torch.cuda.LongTensor</td></tr></tbody></table><p>一般神经网络建模使用的都是 <strong>torch.float32</strong> 类型。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> torch 

<span class="token comment"># 自动推断数据类型</span>
i <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>i<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>
x <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>x<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>
b <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>b<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>

<span class="token comment"># 指定数据类型</span>
i <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>dtype <span class="token operator">=</span> torch<span class="token punctuation">.</span>int32<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>i<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>
x <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span>dtype <span class="token operator">=</span> torch<span class="token punctuation">.</span>double<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>x<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>

<span class="token comment"># 使用特定类型构造函数</span>
i <span class="token operator">=</span> torch<span class="token punctuation">.</span>IntTensor<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>i<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>
x <span class="token operator">=</span> torch<span class="token punctuation">.</span>Tensor<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>x<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span> <span class="token comment">#等价于torch.FloatTensor</span>
b <span class="token operator">=</span> torch<span class="token punctuation">.</span>BoolTensor<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>b<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>

<span class="token comment"># 不同类型进行转换</span>
i <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>i<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>
x <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>x<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span> <span class="token comment">#调用 float 方法转换成浮点类型</span>
y <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span>y<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span> <span class="token comment">#使用 type 函数转换成浮点类型</span>
z <span class="token operator">=</span> i<span class="token punctuation">.</span>type_as<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span>z<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span> <span class="token comment">#使用 type_as 方法转换成某个 Tensor 相同类型</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>api 总结</p><table><thead><tr><th>方法</th><th>含义</th></tr></thead><tbody><tr><td><code>torch.tensor(value)</code></td><td>创建 tensor，参数中接收的是数据的内容</td></tr><tr><td><code>tensor.dtype()</code></td><td>获取 tensor 的类型</td></tr><tr><td><code>torch.FloatTensor(nums/shape/value)</code> <br><code>torch.IntTensor(nums/shape/value)</code> <br><code>torch.Tensor(nums/shape/value)</code>...</td><td>参数接收个数， shape 或 value 创建 tensor <br><code>torch.FloatTensor(2),torch.FloatTensor(2,3),torch.FloatTensor([2.,8.3])</code></td></tr><tr><td><code>tensor.float()</code></td><td>将 tensor 转换为浮点类型</td></tr><tr><td><code>tensor.type(torch.float)</code></td><td>使用 type 函数转换成浮点类型</td></tr><tr><td><code>tensor.type_as(x)</code></td><td>使用 type_as 方法转换成某个 Tensor 相同类型</td></tr></tbody></table><h2 id="_2-2、张量的维度" tabindex="-1"><a class="header-anchor" href="#_2-2、张量的维度" aria-hidden="true">#</a> 2.2、张量的维度</h2><p>不同类型的数据可以用不同维度 (dimension) 的张量来表示。</p><ul><li>标量为 0 维张量</li><li>向量为 1 维张量</li><li>矩阵为 2 维张量</li><li>彩色图像有 rgb 三个通道，可以表示为3维张量</li><li>视频还有时间维，可以表示为 4 维张量</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>scalar <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>scalar<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>scalar<span class="token punctuation">.</span>dim<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 标量，0维张量</span>
vector <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">3.0</span><span class="token punctuation">,</span><span class="token number">4.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#向量，1维张量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>vector<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>vector<span class="token punctuation">.</span>dim<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
matrix <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3.0</span><span class="token punctuation">,</span><span class="token number">4.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#矩阵, 2维张量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>matrix<span class="token punctuation">.</span>dim<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
tensor3 <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3.0</span><span class="token punctuation">,</span><span class="token number">4.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5.0</span><span class="token punctuation">,</span><span class="token number">6.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7.0</span><span class="token punctuation">,</span><span class="token number">8.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 3维张量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tensor3<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tensor3<span class="token punctuation">.</span>dim<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
tensor4 <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3.0</span><span class="token punctuation">,</span><span class="token number">3.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4.0</span><span class="token punctuation">,</span><span class="token number">4.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                        <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5.0</span><span class="token punctuation">,</span><span class="token number">5.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">6.0</span><span class="token punctuation">,</span><span class="token number">6.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">7.0</span><span class="token punctuation">,</span><span class="token number">7.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">8.0</span><span class="token punctuation">,</span><span class="token number">8.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 4维张量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tensor4<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tensor4<span class="token punctuation">.</span>dim<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>api 总结</p><table><thead><tr><th>方法</th><th>含义</th></tr></thead><tbody><tr><td><code>a.dim()</code></td><td>返回 tensor 的维度（size 的长度）</td></tr></tbody></table><h2 id="_2-3、张量的尺寸" tabindex="-1"><a class="header-anchor" href="#_2-3、张量的尺寸" aria-hidden="true">#</a> 2.3、张量的尺寸</h2><p>可以使用 shape 属性或者 size() 方法查看张量在每一维的长度.</p><p>可以使用 view 方法改变张量的尺寸。</p><p>如果 view 方法改变尺寸失败，可以使用 reshape 方法</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>vector <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">3.0</span><span class="token punctuation">,</span><span class="token number">4.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>vector<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>vector<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

<span class="token comment"># 使用view可以改变张量尺寸</span>
vector <span class="token operator">=</span> torch<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>vector<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>vector<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

matrix34 <span class="token operator">=</span> vector<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>matrix34<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>matrix34<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

matrix43 <span class="token operator">=</span> vector<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">#-1表示该位置长度由程序自动推断</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>matrix43<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>matrix43<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

<span class="token comment"># 有些操作会让张量存储结构扭曲，直接使用view会失败，可以用reshape方法</span>

matrix26 <span class="token operator">=</span> torch<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>matrix26<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>matrix26<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

<span class="token comment"># 转置操作让张量存储结构扭曲</span>
matrix62 <span class="token operator">=</span> matrix26<span class="token punctuation">.</span>t<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>matrix62<span class="token punctuation">.</span>is_contiguous<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token comment"># 直接使用view方法会失败，可以使用reshape方法</span>
<span class="token comment">#matrix34 = matrix62.view(3,4) #error!</span>
matrix34 <span class="token operator">=</span> matrix62<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">#等价于matrix34 = matrix62.contiguous().view(3,4)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>matrix34<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>api 总结</p><table><thead><tr><th>方法</th><th>含义</th></tr></thead><tbody><tr><td><code>tensor.shape</code></td><td>返回 tensor 的 size（不同维度长度的数组）</td></tr><tr><td><code>torch.arange(min,max,[step])</code></td><td>生成值为等差数列的 tensor</td></tr><tr><td><code>tensor.size([i])</code></td><td>返回 size 数组索引为 i 的值，没有 i 与 shape 属性相同</td></tr><tr><td><code>tensor.shape[i]</code></td><td>返回 size 数组索引为 i 的值，也可以直接使用 <code>a.shape</code> 获取 size 对象，可以直接使用 <code>list(a.shape)</code> 将 size 转换为 list</td></tr><tr><td><code>tensor.view(shape) </code></td><td>对 tensor 进行变换</td></tr><tr><td><code>tensor.reshape(shape)</code></td><td>对 tensor 进行变换</td></tr></tbody></table><h2 id="_2-4、张量和-numpy-数组" tabindex="-1"><a class="header-anchor" href="#_2-4、张量和-numpy-数组" aria-hidden="true">#</a> 2.4、张量和 numpy 数组</h2><p>可以用 numpy 方法从 Tensor 得到 numpy 数组，也可以用 torch.from_numpy 从 numpy 数组得到 Tensor。</p><p>这两种方法关联的 Tensor 和 numpy 数组是共享数据内存的。如果改变其中一个，另外一个的值也会发生改变。</p><p>如果有需要，可以用张量的 clone 方法拷贝张量，中断这种关联。</p><p>此外，还可以使用 item 方法从标量张量得到对应的 Python 数值。使用 tolist 方法从张量得到对应的 Python 数值列表。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> torch 

<span class="token comment">#torch.from_numpy 函数从 numpy 数组得到 Tensor</span>
arr <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tensor<span class="token punctuation">)</span> <span class="token comment"># tensor([0., 0., 0.], dtype=torch.float64)</span>
np<span class="token punctuation">.</span>add<span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span> out <span class="token operator">=</span> arr<span class="token punctuation">)</span> <span class="token comment"># 给 arr 增加1，tensor 也随之改变</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tensor<span class="token punctuation">)</span> <span class="token comment"># tensor([1., 1., 1.], dtype=torch.float64)</span>

<span class="token comment"># numpy 方法从 Tensor 得到 numpy 数组</span>
tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># tensor([0., 0., 0.])</span>
arr <span class="token operator">=</span> tensor<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># [0. 0. 0.]</span>

<span class="token comment"># 使用带下划线的方法表示计算结果会返回给调用张量</span>
tensor<span class="token punctuation">.</span>add_<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">#给 tensor 增加 1，arr 也随之改变 </span>
<span class="token comment"># 或： torch.add(tensor,1,out = tensor)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tensor<span class="token punctuation">)</span> <span class="token comment"># tensor([1., 1., 1.])</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment"># [1. 1. 1.]</span>

<span class="token comment"># 可以用 clone() 方法拷贝张量，中断这种关联</span>
tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">#使用 clone 方法拷贝张量, 拷贝后的张量和原始张量内存独立</span>
arr <span class="token operator">=</span> tensor<span class="token punctuation">.</span>clone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 也可以使用 tensor.data.numpy()</span>
<span class="token comment">#使用带下划线的方法表示计算结果会返回给调用张量</span>
tensor<span class="token punctuation">.</span>add_<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">#给 tensor增加1，arr不再随之改变</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tensor<span class="token punctuation">)</span> <span class="token comment"># tensor([1., 1., 1.])</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment"># [0. 0. 0.]</span>

<span class="token comment"># item 方法和 tolist 方法可以将张量转换成 Python 数值和数值列表</span>
scalar <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span>
s <span class="token operator">=</span> scalar<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 1.0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;float&#39;&gt;</span>
tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
t <span class="token operator">=</span> tensor<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token comment"># [[0.4581589698791504, 0.46063995361328125], [0.5779597759246826, 0.40021681785583496]]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;list&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>api 总结</p><table><thead><tr><th>方法</th><th>含义</th></tr></thead><tbody><tr><td><code>torch.from_numpy(arr)</code></td><td>使用 numpy 创建 tensor</td></tr><tr><td><code>torch.zeros(3)</code></td><td>生成全是 0 的 tensor</td></tr><tr><td><code>torch.ones(shape)</code></td><td>生成全是 1 的 tensor</td></tr><tr><td><code>tensor.numpy()</code></td><td>将 tensor 变为 numpy 数组</td></tr><tr><td><code>tensor.add_(num)</code></td><td>带下划线的方法计算结果会返回给调用张量</td></tr><tr><td><code>torch.add(tensor,num,out = tensor)</code></td><td>与上一个方法类似</td></tr><tr><td><code>tensor.clone()</code></td><td>拷贝张量</td></tr><tr><td><code>tensor.item()</code></td><td>将张量转换成 Python 数值</td></tr><tr><td><code>tensor.tolist()</code></td><td>将张量转换成 Python 数值列表</td></tr></tbody></table>`,31),e=[o];function c(u,i){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","2、张量数据结构.html.vue"]]);export{k as default};
